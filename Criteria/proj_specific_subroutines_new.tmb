

xcode=1
if p1 then
	{
/* TOTAL OF 227 PROJ SPECIFIC CHAINS IN THIS FILE*/

sub label_eos
		{ 
		 if _s_side_slope = ^left^ then 
		  {	
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_leos
				draw text char = ^_mp_GPK_CH_A_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_leos
				draw text char = ^_mp_GPK_CH_B_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_leos
				draw text char = ^_mp_GPK_CH_C_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_leos
				draw text char = ^_mp_GPK_CH_D_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_leos
				draw text char = ^_mp_GPK_CH_E_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_leos
				draw text char = ^_mp_GPK_CH_F_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_leos
				draw text char = ^_mp_GPK_CH_G_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_leos
				draw text char = ^_mp_GPK_CH_H_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_leos
				draw text char = ^_mp_GPK_CH_I_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_leos
				draw text char = ^_mp_GPK_CH_J_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_leos
				draw text char = ^_mp_GPK_CH_K_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_leos
				draw text char = ^_mp_GPK_CH_M_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_leos
				draw text char = ^_mp_GPK_CH_N_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_leos
				draw text char = ^_mp_GPK_CH_P_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_leos
				draw text char = ^_mp_GPK_CH_L_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_leos
				draw text char = ^_mp_GPK_CH_O_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_leos
				draw text char = ^_mp_GPK_CH_Q_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_leos
				draw text char = ^_mp_GPK_CH_R_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_leos
				draw text char = ^_mp_GPK_CH_S_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_leos
				draw text char = ^_mp_GPK_CH_T_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_leos
				draw text char = ^_mp_GPK_CH_U_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_leos
				draw text char = ^_mp_GPK_CH_X_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_leos
				draw text char = ^_mp_GPK_CH_W_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_leos
				draw text char = ^_mp_GPK_CH_V_leos^ "mp text"
				}			
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_eos on left^ "mp text"
				}
			}
		else /*ssr*/
		  {	
			
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_reos
				draw text char = ^_mp_GPK_CH_A_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_reos
				draw text char = ^_mp_GPK_CH_B_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_reos
				draw text char = ^_mp_GPK_CH_D_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_reos
				draw text char = ^_mp_GPK_CH_C_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_reos
				draw text char = ^_mp_GPK_CH_E_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_reos
				draw text char = ^_mp_GPK_CH_F_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_reos
				draw text char = ^_mp_GPK_CH_G_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_reos
				draw text char = ^_mp_GPK_CH_H_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_reos
				draw text char = ^_mp_GPK_CH_I_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_reos
				draw text char = ^_mp_GPK_CH_J_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_reos
				draw text char = ^_mp_GPK_CH_K_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_reos
				draw text char = ^_mp_GPK_CH_M_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_reos
				draw text char = ^_mp_GPK_CH_N_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_reos
				draw text char = ^_mp_GPK_CH_P_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_reos
				draw text char = ^_mp_GPK_CH_L_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_reos
				draw text char = ^_mp_GPK_CH_O_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_reos
				draw text char = ^_mp_GPK_CH_Q_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_reos
				draw text char = ^_mp_GPK_CH_R_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_reos
				draw text char = ^_mp_GPK_CH_S_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_reos
				draw text char = ^_mp_GPK_CH_T_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_reos
				draw text char = ^_mp_GPK_CH_U_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_reos
				draw text char = ^_mp_GPK_CH_X_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_reos
				draw text char = ^_mp_GPK_CH_W_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_reos
				draw text char = ^_mp_GPK_CH_V_reos^ "mp text"
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_eos on right^ "mp text"
				}
			}
		}
		end sub		/* ends the sub label_eos */
		
		
		

sub label_eop_point
		{ 
		mark _mp_current_eop
		 if _s_side_slope = ^left^ then 
		  {	
			_s_chain = cluster baseline
			
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_leop
				draw text char = ^_mp_GPK_CH_A_leop^ "mp text"
				mark _mp_GPK_CH_A_TOC_left
				mark _mp_GPK_CH_A_VG_FLOW_LEFT
				
				
				}
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_leop
				draw text char = ^_mp_GPK_CH_B_leop^ "mp text"
				mark _mp_GPK_CH_B_TOC_left
				mark _mp_GPK_CH_B_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_leop
				draw text char = ^_mp_GPK_CH_D_leop^ "mp text"
				mark _mp_GPK_CH_D_TOC_left
				mark _mp_GPK_CH_D_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_leop
				draw text char = ^_mp_GPK_CH_C_leop^ "mp text"
				mark _mp_GPK_CH_C_TOC_left
				mark _mp_GPK_CH_C_VG_FLOW_LEFT
				
				
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_leop
				draw text char = ^_mp_GPK_CH_E_leop^ "mp text"
				mark _mp_GPK_CH_E_TOC_left
				mark _mp_GPK_CH_E_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_leop
				draw text char = ^_mp_GPK_CH_F_leop^ "mp text"
				mark _mp_GPK_CH_F_TOC_left
				mark _mp_GPK_CH_F_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_leop
				draw text char = ^_mp_GPK_CH_G_leop^ "mp text"
				mark _mp_GPK_CH_G_TOC_left
				mark _mp_GPK_CH_G_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_leop
				draw text char = ^_mp_GPK_CH_H_leop^ "mp text"
				mark _mp_GPK_CH_H_TOC_left
				mark _mp_GPK_CH_H_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_leop
				draw text char = ^_mp_GPK_CH_I_leop^ "mp text"
				mark _mp_GPK_CH_I_TOC_left
				mark _mp_GPK_CH_I_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_leop
				draw text char = ^_mp_GPK_CH_J_leop^ "mp text"
				mark _mp_GPK_CH_J_TOC_left
				mark _mp_GPK_CH_J_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_leop
				draw text char = ^_mp_GPK_CH_K_leop^ "mp text"
				mark _mp_GPK_CH_K_TOC_left
				mark _mp_GPK_CH_K_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_leop
				draw text char = ^_mp_GPK_CH_M_leop^ "mp text"
				mark _mp_GPK_CH_M_TOC_left
				mark _mp_GPK_CH_M_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_leop
				draw text char = ^_mp_GPK_CH_N_leop^ "mp text"
				mark _mp_GPK_CH_N_TOC_left
				mark _mp_GPK_CH_N_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_leop
				draw text char = ^_mp_GPK_CH_P_leop^ "mp text"
				mark _mp_GPK_CH_P_TOC_left
				mark _mp_GPK_CH_P_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_leop
				draw text char = ^_mp_GPK_CH_L_leop^ "mp text"
				mark _mp_GPK_CH_L_TOC_left
				mark _mp_GPK_CH_L_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_leop
				draw text char = ^_mp_GPK_CH_O_leop^ "mp text"
				mark _mp_GPK_CH_O_TOC_left
				mark _mp_GPK_CH_O_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_leop
				draw text char = ^_mp_GPK_CH_Q_leop^ "mp text"
				mark _mp_GPK_CH_Q_TOC_left
				mark _mp_GPK_CH_Q_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_leop
				draw text char = ^_mp_GPK_CH_R_leop^ "mp text"
				mark _mp_GPK_CH_R_TOC_left
				mark _mp_GPK_CH_R_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_leop
				draw text char = ^_mp_GPK_CH_S_leop^ "mp text"
				mark _mp_GPK_CH_S_TOC_left
				mark _mp_GPK_CH_S_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_leop
				draw text char = ^_mp_GPK_CH_T_leop^ "mp text"
				mark _mp_GPK_CH_T_TOC_left
				mark _mp_GPK_CH_T_VG_FLOW_LEFT
				
				
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_leop
				draw text char = ^_mp_GPK_CH_U_leop^ "mp text"
				mark _mp_GPK_CH_U_TOC_left
				mark _mp_GPK_CH_U_VG_FLOW_LEFT
				
				
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_leop
				draw text char = ^_mp_GPK_CH_X_leop^ "mp text"
				mark _mp_GPK_CH_X_TOC_left
				mark _mp_GPK_CH_X_VG_FLOW_LEFT
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_leop
				draw text char = ^_mp_GPK_CH_W_leop^ "mp text"
				mark _mp_GPK_CH_W_TOC_left
				mark _mp_GPK_CH_W_VG_FLOW_LEFT
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_leop
				draw text char = ^_mp_GPK_CH_V_leop^ "mp text"
				mark _mp_GPK_CH_V_TOC_left
				mark _mp_GPK_CH_V_VG_FLOW_LEFT
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_left_eop_point^ "mp text"
				}
			}
		else /*ssr*/
		  {	
			_s_chain = cluster baseline
			
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_reop
				draw text char = ^_mp_GPK_CH_A_reop^ "mp text"
				mark _mp_GPK_CH_A_TOC_right
				mark _mp_GPK_CH_A_VG_FLOW_right
				
				
				}
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_reop
				draw text char = ^_mp_GPK_CH_B_reop^ "mp text"
				mark _mp_GPK_CH_B_TOC_right
				mark _mp_GPK_CH_B_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_reop
				draw text char = ^_mp_GPK_CH_D_reop^ "mp text"
				mark _mp_GPK_CH_D_TOC_right
				mark _mp_GPK_CH_D_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_reop
				draw text char = ^_mp_GPK_CH_C_reop^ "mp text"
				mark _mp_GPK_CH_C_TOC_right
				mark _mp_GPK_CH_C_VG_FLOW_right
				
				
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_reop
				draw text char = ^_mp_GPK_CH_E_reop^ "mp text"
				mark _mp_GPK_CH_E_TOC_right
				mark _mp_GPK_CH_E_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_reop
				draw text char = ^_mp_GPK_CH_F_reop^ "mp text"
				mark _mp_GPK_CH_F_TOC_right
				mark _mp_GPK_CH_F_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_reop
				draw text char = ^_mp_GPK_CH_G_reop^ "mp text"
				mark _mp_GPK_CH_G_TOC_right
				mark _mp_GPK_CH_G_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_reop
				draw text char = ^_mp_GPK_CH_H_reop^ "mp text"
				mark _mp_GPK_CH_H_TOC_right
				mark _mp_GPK_CH_H_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_reop
				draw text char = ^_mp_GPK_CH_I_reop^ "mp text"
				mark _mp_GPK_CH_I_TOC_right
				mark _mp_GPK_CH_I_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_reop
				draw text char = ^_mp_GPK_CH_J_reop^ "mp text"
				mark _mp_GPK_CH_J_TOC_right
				mark _mp_GPK_CH_J_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_reop
				draw text char = ^_mp_GPK_CH_K_reop^ "mp text"
				mark _mp_GPK_CH_K_TOC_right
				mark _mp_GPK_CH_K_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_reop
				draw text char = ^_mp_GPK_CH_M_reop^ "mp text"
				mark _mp_GPK_CH_M_TOC_right
				mark _mp_GPK_CH_M_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_reop
				draw text char = ^_mp_GPK_CH_N_reop^ "mp text"
				mark _mp_GPK_CH_N_TOC_right
				mark _mp_GPK_CH_N_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_reop
				draw text char = ^_mp_GPK_CH_P_reop^ "mp text"
				mark _mp_GPK_CH_P_TOC_right
				mark _mp_GPK_CH_P_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_reop
				draw text char = ^_mp_GPK_CH_L_reop^ "mp text"
				mark _mp_GPK_CH_L_TOC_right
				mark _mp_GPK_CH_L_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_reop
				draw text char = ^_mp_GPK_CH_O_reop^ "mp text"
				mark _mp_GPK_CH_O_TOC_right
				mark _mp_GPK_CH_O_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_reop
				draw text char = ^_mp_GPK_CH_Q_reop^ "mp text"
				mark _mp_GPK_CH_Q_TOC_right
				mark _mp_GPK_CH_Q_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_reop
				draw text char = ^_mp_GPK_CH_R_reop^ "mp text"
				mark _mp_GPK_CH_R_TOC_right
				mark _mp_GPK_CH_R_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_reop
				draw text char = ^_mp_GPK_CH_S_reop^ "mp text"
				mark _mp_GPK_CH_S_TOC_right
				mark _mp_GPK_CH_S_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_reop
				draw text char = ^_mp_GPK_CH_T_reop^ "mp text"
				mark _mp_GPK_CH_T_TOC_right
				mark _mp_GPK_CH_T_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_reop
				draw text char = ^_mp_GPK_CH_U_reop^ "mp text"
				mark _mp_GPK_CH_U_TOC_right
				mark _mp_GPK_CH_U_VG_FLOW_right
				
				
				}
			
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_reop
				draw text char = ^_mp_GPK_CH_X_reop^ "mp text"
				mark _mp_GPK_CH_X_TOC_right
				mark _mp_GPK_CH_X_VG_FLOW_right
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_reop
				draw text char = ^_mp_GPK_CH_W_reop^ "mp text"
				mark _mp_GPK_CH_W_TOC_right
				mark _mp_GPK_CH_W_VG_FLOW_right
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_reop
				draw text char = ^_mp_GPK_CH_V_reop^ "mp text"
				mark _mp_GPK_CH_V_TOC_right
				mark _mp_GPK_CH_V_VG_FLOW_right
				}	
			
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_right_eop_point^ "mp text"
				}
			}
		}	
	end sub
	
	
	
	
	
	
	
	
	sub draw_skip_to_aggbase_under_eops
		{	
		_s_chain = cluster baseline
		
		if _s_side_slope = "left" then 
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_agg_under_leos
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_agg_under_leos

				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_agg_under_leos

				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_agg_under_leos

				}
			else if _s_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_agg_under_leos

				}
			else if _s_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_agg_under_leos

				}
			else if _s_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_agg_under_leos

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_aggbase_under_eops^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_agg_under_reos
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_agg_under_reos

				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_agg_under_reos

				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_agg_under_reos

				}
			else if _s_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_agg_under_reos

				}
			else if _s_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_agg_under_reos

				}
			else if _s_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_agg_under_reos

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_aggbase_under_eops^ "mp text"
				}
			} /* ends ssr*/
		}
	
	end sub /* ends sub draw_skip_to_aggbase_under_eops*/		
	
	
	
	
	
	
	
	
	
	
	
	sub draw_skip_to_closest_chain_aggbase_under_eops
		{	
		
		
		if _s_closest_chain_side_slope = "left" then 
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_agg_under_leos
				
				}
				
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_agg_under_leos

				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_agg_under_leos

				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_agg_under_leos

				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_agg_under_leos

				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_agg_under_leos

				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_agg_under_leos

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_agg_under_leos^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_agg_under_reos
				
				}
				
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_agg_under_reos

				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_agg_under_reos

				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_agg_under_reos

				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_agg_under_reos

				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_agg_under_reos

				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_agg_under_reos

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_agg_under_reos^ "mp text"
				}
			} /* ends ssr*/
		}
	
	end sub /* ends sub draw_skip_to_closest_chain_aggbase_under_eops*/		





	
	
sub draw_skip_to_closest_chain_eop_point
		{ 
		/* this is used for dfb code */
		 if _s_closest_chain_side_slope = "left" then 
		  {	
			
			
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_leop
				
				}
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_leop
				
				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_leop
				
				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_leop
				
				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_leop
				
				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_leop
				
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_left_eop_point^ "mp text"
				}
			}
		else /*ssr*/
		  {	
			
			
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_reop
				
				}
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_reop
				
				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_reop
			
				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_reop
				
				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_reop
				
				}	
			
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_closest_chain_eop_point^ "mp text"
				}
			}
		}	
	end sub		/* ends draw_skip_to_closest_chain_eop_point*/
	
	
	
	
sub label_aggbase_under_eop
		{	
		/* mark x889 y889 */
		mark _mp_aggbase_under_eop /* this can be used to tie rt/lt treatments to agg under road */
		mark _mp_aggbase_under_eops /*this will be remarked if shoulder is present*/	
			
			_s_chain = cluster baseline
			
			
			
		if _s_side_slope = ^left^ then	
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_A_aggbase_under_leop^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_B_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_C_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_D_aggbase_under_leop^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_E_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_F_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_G_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_H_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_I_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_J_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_K_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_M_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_N_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_P_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_L_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_O_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_Q_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_R_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_S_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_T_aggbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_U_aggbase_under_leop^ "mp text"
				
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_X_aggbase_under_leop^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_W_aggbase_under_leop^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_aggbase_under_leop
				draw text char = ^_mp_GPK_CH_V_aggbase_under_leop^ "mp text"
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_aggbase_under_leop^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{	
			/* mark x889 y889 don't know what this is for yet*/
			_s_chain = cluster baseline
								
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_A_aggbase_under_reop^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_B_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_C_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_D_aggbase_under_reop^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_E_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_F_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_G_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_H_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_I_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_J_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_K_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_M_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_N_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_P_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_L_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_O_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_Q_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_R_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_S_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_T_aggbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_U_aggbase_under_reop^ "mp text"
				
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_X_aggbase_under_reop^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_W_aggbase_under_reop^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_aggbase_under_reop
				draw text char = ^_mp_GPK_CH_V_aggbase_under_reop^ "mp text"
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_aggbase_under_reop^ "mp text"
				}
			
			} /* ends ssr*/
		}
	
	end sub /* ends sub label_aggbase_under_eop*/	


sub label_aggbase_under_eops
		{	
		/* if we have dfb, it draws the paved shoulder for each roadway, so the side slope and _s_chain variables will not be the cluster baseline */
		/* but will already be set in the dfb code */
		if _s_hit_double_faced_barrier = ^yes^ then
			{
			
			if _s_chain = cluster baseline then
				{
				/* don't do anything, _s_chain has already been identified as a part of drawing the dfb....*/
				_s_agg_base_side_slope = _s_side_slope
				}
			else
				{
				/* don't do anything, _s_chain has already been identified as a part of drawing the dfb....*/
				_s_agg_base_side_slope = _s_closest_chain_side_slope
				}
			}
		else
			{
			_s_chain = cluster baseline
			_s_agg_base_side_slope = _s_side_slope
			}
			
			
			
		if _s_agg_base_side_slope = ^left^ then	
			{
			mark _mp_aggbase_under_eops	
					
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_agg_under_leos
				draw text char = ^_mp_GPK_CH_A_agg_under_leos^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_agg_under_leos
				draw text char = ^_mp_GPK_CH_B_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_agg_under_leos
				draw text char = ^_mp_GPK_CH_C_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_agg_under_leos
				draw text char = ^_mp_GPK_CH_D_agg_under_leos^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_agg_under_leos
				draw text char = ^_mp_GPK_CH_E_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_agg_under_leos
				draw text char = ^_mp_GPK_CH_F_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_agg_under_leos
				draw text char = ^_mp_GPK_CH_G_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_agg_under_leos
				draw text char = ^_mp_GPK_CH_H_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_agg_under_leos
				draw text char = ^_mp_GPK_CH_I_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_agg_under_leos
				draw text char = ^_mp_GPK_CH_J_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_agg_under_leos
				draw text char = ^_mp_GPK_CH_K_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_agg_under_leos
				draw text char = ^_mp_GPK_CH_M_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_agg_under_leos
				draw text char = ^_mp_GPK_CH_N_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_agg_under_leos
				draw text char = ^_mp_GPK_CH_P_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_agg_under_leos
				draw text char = ^_mp_GPK_CH_L_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_agg_under_leos
				draw text char = ^_mp_GPK_CH_O_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_agg_under_leos
				draw text char = ^_mp_GPK_CH_Q_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_agg_under_leos
				draw text char = ^_mp_GPK_CH_R_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_agg_under_leos
				draw text char = ^_mp_GPK_CH_S_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_agg_under_leos
				draw text char = ^_mp_GPK_CH_T_agg_under_leos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_agg_under_leos
				draw text char = ^_mp_GPK_CH_U_agg_under_leos^ "mp text"
				
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_agg_under_leos
				draw text char = ^_mp_GPK_CH_X_agg_under_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_agg_under_leos
				draw text char = ^_mp_GPK_CH_W_agg_under_leos^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_agg_under_leos
				draw text char = ^_mp_GPK_CH_V_agg_under_leos^ "mp text"
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_agg_under_leos^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{	
			mark _mp_aggbase_under_eops	
			
								
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_agg_under_reos
				draw text char = ^_mp_GPK_CH_A_agg_under_reos^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_agg_under_reos
				draw text char = ^_mp_GPK_CH_B_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_agg_under_reos
				draw text char = ^_mp_GPK_CH_C_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_agg_under_reos
				draw text char = ^_mp_GPK_CH_D_agg_under_reos^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_agg_under_reos
				draw text char = ^_mp_GPK_CH_E_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_agg_under_reos
				draw text char = ^_mp_GPK_CH_F_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_agg_under_reos
				draw text char = ^_mp_GPK_CH_G_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_agg_under_reos
				draw text char = ^_mp_GPK_CH_H_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_agg_under_reos
				draw text char = ^_mp_GPK_CH_I_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_agg_under_reos
				draw text char = ^_mp_GPK_CH_J_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_agg_under_reos
				draw text char = ^_mp_GPK_CH_K_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_agg_under_reos
				draw text char = ^_mp_GPK_CH_M_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_agg_under_reos
				draw text char = ^_mp_GPK_CH_N_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_agg_under_reos
				draw text char = ^_mp_GPK_CH_P_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_agg_under_reos
				draw text char = ^_mp_GPK_CH_L_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_agg_under_reos
				draw text char = ^_mp_GPK_CH_O_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_agg_under_reos
				draw text char = ^_mp_GPK_CH_Q_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_agg_under_reos
				draw text char = ^_mp_GPK_CH_R_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_agg_under_reos
				draw text char = ^_mp_GPK_CH_S_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_agg_under_reos
				draw text char = ^_mp_GPK_CH_T_agg_under_reos^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_agg_under_reos
				draw text char = ^_mp_GPK_CH_U_agg_under_reos^ "mp text"
				
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_agg_under_reos
				draw text char = ^_mp_GPK_CH_X_agg_under_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_agg_under_reos
				draw text char = ^_mp_GPK_CH_W_agg_under_reos^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_agg_under_reos
				draw text char = ^_mp_GPK_CH_V_agg_under_reos^ "mp text"
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_agg_under_reos^ "mp text"
				}
			
			} /* ends ssr*/
		}
	
	end sub /* ends sub label_agg_under_eops*/





	sub label_subbase_under_eop
		{	
		
		mark _mp_subbase_under_eop /* this can be used to tie rt/lt treatments to subbase under road */
			_s_chain = cluster baseline
			
			
			
		if _s_side_slope = ^left^ then	
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_subbase_under_leop
				draw text char = ^_mp_GPK_CH_A_subbase_under_leop^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_subbase_under_leop
				draw text char = ^_mp_GPK_CH_B_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_subbase_under_leop
				draw text char = ^_mp_GPK_CH_C_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_subbase_under_leop
				draw text char = ^_mp_GPK_CH_D_subbase_under_leop^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_subbase_under_leop
				draw text char = ^_mp_GPK_CH_E_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_subbase_under_leop
				draw text char = ^_mp_GPK_CH_F_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_subbase_under_leop
				draw text char = ^_mp_GPK_CH_G_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_subbase_under_leop
				draw text char = ^_mp_GPK_CH_H_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_subbase_under_leop
				draw text char = ^_mp_GPK_CH_I_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_subbase_under_leop
				draw text char = ^_mp_GPK_CH_J_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_subbase_under_leop
				draw text char = ^_mp_GPK_CH_K_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_subbase_under_leop
				draw text char = ^_mp_GPK_CH_M_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_subbase_under_leop
				draw text char = ^_mp_GPK_CH_N_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_subbase_under_leop
				draw text char = ^_mp_GPK_CH_P_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_subbase_under_leop
				draw text char = ^_mp_GPK_CH_L_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_subbase_under_leop
				draw text char = ^_mp_GPK_CH_O_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_subbase_under_leop
				draw text char = ^_mp_GPK_CH_Q_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_subbase_under_leop
				draw text char = ^_mp_GPK_CH_R_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_subbase_under_leop
				draw text char = ^_mp_GPK_CH_S_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_subbase_under_leop
				draw text char = ^_mp_GPK_CH_T_subbase_under_leop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_subbase_under_leop
				draw text char = ^_mp_GPK_CH_U_subbase_under_leop^ "mp text"
				
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_subbase_under_leop
				draw text char = ^_mp_GPK_CH_X_subbase_under_leop^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_subbase_under_leop
				draw text char = ^_mp_GPK_CH_W_subbase_under_leop^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_subbase_under_leop
				draw text char = ^_mp_GPK_CH_V_subbase_under_leop^ "mp text"
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_subbase_under_leop^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{	
			
			_s_chain = cluster baseline
								
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_subbase_under_reop
				draw text char = ^_mp_GPK_CH_A_subbase_under_reop^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_subbase_under_reop
				draw text char = ^_mp_GPK_CH_B_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_subbase_under_reop
				draw text char = ^_mp_GPK_CH_C_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_subbase_under_reop
				draw text char = ^_mp_GPK_CH_D_subbase_under_reop^ "mp text"
				
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_subbase_under_reop
				draw text char = ^_mp_GPK_CH_E_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_subbase_under_reop
				draw text char = ^_mp_GPK_CH_F_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_subbase_under_reop
				draw text char = ^_mp_GPK_CH_G_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_subbase_under_reop
				draw text char = ^_mp_GPK_CH_H_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_subbase_under_reop
				draw text char = ^_mp_GPK_CH_I_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_subbase_under_reop
				draw text char = ^_mp_GPK_CH_J_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_subbase_under_reop
				draw text char = ^_mp_GPK_CH_K_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_subbase_under_reop
				draw text char = ^_mp_GPK_CH_M_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_subbase_under_reop
				draw text char = ^_mp_GPK_CH_N_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_subbase_under_reop
				draw text char = ^_mp_GPK_CH_P_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_subbase_under_reop
				draw text char = ^_mp_GPK_CH_L_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_subbase_under_reop
				draw text char = ^_mp_GPK_CH_O_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_subbase_under_reop
				draw text char = ^_mp_GPK_CH_Q_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_subbase_under_reop
				draw text char = ^_mp_GPK_CH_R_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_subbase_under_reop
				draw text char = ^_mp_GPK_CH_S_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_subbase_under_reop
				draw text char = ^_mp_GPK_CH_T_subbase_under_reop^ "mp text"
				
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_subbase_under_reop
				draw text char = ^_mp_GPK_CH_U_subbase_under_reop^ "mp text"
				
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_subbase_under_reop
				draw text char = ^_mp_GPK_CH_X_subbase_under_reop^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_subbase_under_reop
				draw text char = ^_mp_GPK_CH_W_subbase_under_reop^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_subbase_under_reop
				draw text char = ^_mp_GPK_CH_V_subbase_under_reop^ "mp text"
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_subbase_under_reop^ "mp text"
				}
			
			} /* ends ssr*/
		}
	
	end sub /* ends sub label_subbase_under_eop*/	
	
	
	
	
	
	sub draw_skip_to_closest_chain_subbase_under_eop_point
		{	
		if _s_closest_chain_side_slope = "left" then 
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_subbase_under_leop
				
				}
				
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_subbase_under_leop
				
				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_subbase_under_leop
				
				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_subbase_under_leop
				
				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_subbase_under_leop
				
				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_subbase_under_leop
				
				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_subbase_under_leop
				
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_closest_chain_subbase_under_eop_point^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{	
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_subbase_under_reop
				
				}
				
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_subbase_under_reop
				
				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_subbase_under_reop
				
				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_subbase_under_reop
				
				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_subbase_under_reop
				
				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_subbase_under_reop
				
				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_subbase_under_reop
				
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_closest_chain_subbase_under_eop_point^ "mp text"
				}
			
			} /* ends ssr*/
		}
	
	end sub /* ends sub draw_skip_to_closest_chain_subbase_under_eop_point*/	
	
	
	
	
	
	sub was_closest_chain_already_processed
		{
		/* this subroutine is used in conjunction with the sub find_closest_chain */
		/* before gores, double faced barrier, shared ditches, etc can be processed, */
		/* both shared chains must have already been processed */
		
		
		if _s_closest_chain = "GPK_CH_A" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_A_already_processed
			}
		else if _s_closest_chain = "GPK_CH_B" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_B_already_processed
			}
		else if _s_closest_chain = "GPK_CH_C" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_C_already_processed
			}
		else if _s_closest_chain = "GPK_CH_D" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_D_already_processed
			}
		else if _s_closest_chain = "GPK_CH_E" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_E_already_processed
			}
		else if _s_closest_chain = "GPK_CH_F" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_F_already_processed
			}
		else if _s_closest_chain = "GPK_CH_G" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_G_already_processed
			}
		else if _s_closest_chain = "GPK_CH_H" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_H_already_processed
			}
		else if _s_closest_chain = "GPK_CH_I" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_I_already_processed
			}
		else if _s_closest_chain = "GPK_CH_J" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_J_already_processed
			}
		else if _s_closest_chain = "GPK_CH_K" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_K_already_processed
			}
		else if _s_closest_chain = "GPK_CH_M" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_M_already_processed
			}
		else if _s_closest_chain = "GPK_CH_N" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_N_already_processed
			}
		else if _s_closest_chain = "GPK_CH_P" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_P_already_processed
			}
		else if _s_closest_chain = "GPK_CH_L" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_L_already_processed
			}
		else if _s_closest_chain = "GPK_CH_O" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_O_already_processed
			}
		else if _s_closest_chain = "GPK_CH_Qz" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_Q_already_processed
			}
		else if _s_closest_chain = "GPK_CH_Rz" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_R_already_processed
			}
		else if _s_closest_chain = "GPK_CH_S" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_S_already_processed
			}
		else if _s_closest_chain = "GPK_CH_T" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_T_already_processed
			}
		else if _s_closest_chain = "GPK_CH_U" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_U_already_processed
			}
		else if _s_closest_chain = "GPK_CH_X" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_X_already_processed
			}
		else if _s_closest_chain = "GPK_CH_W" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_W_already_processed
			}
		else if _s_closest_chain = "GPK_CH_V" then
			{
			_s_closest_chain_already_processed = _s_GPK_CH_V_already_processed
			}
		else
			{
			_s_closest_chain_already_processed = ^no^
			}
	
		
		
		}
	end sub		/* ends the was_closest_chain_already_processed */
	
	
	
	
	
	sub draw_gore
		{
		if _s_closest_chain_already_processed = "yes" then
			{
			
			/* this gore will be drawn using the closest chain edge of pavement and the current cluster being processed edge of pavement */
			
			/* first process the closest chain eop */
			 if _s_closest_chain_side_slope = "left" then 
			  {	
				if _s_closest_chain = "GPK_CH_A" then
					{
					draw skip to _mp_GPK_CH_A_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_A_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_A_subbase_under_leop
							mark _mp_point_5
						}
					
					}
				else if _s_closest_chain = "GPK_CH_B" then
					{
					draw skip to _mp_GPK_CH_B_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_B_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_B_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_D" then
					{
					draw skip to _mp_GPK_CH_D_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_D_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_D_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_C" then
					{
					draw skip to _mp_GPK_CH_C_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_C_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_C_subbase_under_leop
						mark _mp_point_5
						}
					}
					
				else if _s_closest_chain = "GPK_CH_E" then
					{
					draw skip to _mp_GPK_CH_E_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_E_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_E_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_F" then
					{
					draw skip to _mp_GPK_CH_F_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_F_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_F_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_G" then
					{
					draw skip to _mp_GPK_CH_G_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_G_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_G_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_H" then
					{
					draw skip to _mp_GPK_CH_H_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_H_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_H_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_I" then
					{
					draw skip to _mp_GPK_CH_I_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_I_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_I_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_J" then
					{
					draw skip to _mp_GPK_CH_J_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_J_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_J_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_K" then
					{
					draw skip to _mp_GPK_CH_K_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_K_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_K_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_M" then
					{
					draw skip to _mp_GPK_CH_M_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_M_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_M_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_N" then
					{
					draw skip to _mp_GPK_CH_N_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_N_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_N_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_P" then
					{
					draw skip to _mp_GPK_CH_P_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_P_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_P_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_L" then
					{
					draw skip to _mp_GPK_CH_L_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_L_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_L_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_O" then
					{
					draw skip to _mp_GPK_CH_O_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_O_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_O_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_Q" then
					{
					draw skip to _mp_GPK_CH_Q_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_Q_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_Q_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_R" then
					{
					draw skip to _mp_GPK_CH_R_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_R_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_R_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_S" then
					{
					draw skip to _mp_GPK_CH_S_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_S_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_S_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_T" then
					{
					draw skip to _mp_GPK_CH_T_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_T_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_T_subbase_under_leop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_U" then
					{
					draw skip to _mp_GPK_CH_U_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_U_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_U_subbase_under_leop
						mark _mp_point_5
						}
					}
				else if _s_closest_chain = "GPK_CH_X" then
					{
					draw skip to _mp_GPK_CH_X_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_X_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_X_subbase_under_leop
						mark _mp_point_5
						}
					}
				else if _s_closest_chain = "GPK_CH_W" then
					{
					draw skip to _mp_GPK_CH_W_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_W_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_W_subbase_under_leop
						mark _mp_point_5
						}
					}
				else if _s_closest_chain = "GPK_CH_V" then
					{
					draw skip to _mp_GPK_CH_V_leop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_V_aggbase_under_leop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_V_subbase_under_leop
						mark _mp_point_5
						}
					}
				else
					{
					draw dx=10 dy=10
					draw text char = ^missing closest chain name in sub draw_gore^ "mp text"
					}
				}
			else /*_s_closest_chain_side_slope ssr*/
			  {	
				if _s_closest_chain = "GPK_CH_A" then
					{
					draw skip to _mp_GPK_CH_A_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_A_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_A_subbase_under_reop
						mark _mp_point_5
						}
					
					}
				else if _s_closest_chain = "GPK_CH_B" then
					{
					draw skip to _mp_GPK_CH_B_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_B_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_B_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_D" then
					{
					draw skip to _mp_GPK_CH_D_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_D_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_D_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_C" then
					{
					draw skip to _mp_GPK_CH_C_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_C_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_C_subbase_under_reop
						mark _mp_point_5
						}
					}
					
				else if _s_closest_chain = "GPK_CH_E" then
					{
					draw skip to _mp_GPK_CH_E_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_E_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_E_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_F" then
					{
					draw skip to _mp_GPK_CH_F_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_F_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_F_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_G" then
					{
					draw skip to _mp_GPK_CH_G_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_G_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_G_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_H" then
					{
					draw skip to _mp_GPK_CH_H_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_H_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_H_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_I" then
					{
					draw skip to _mp_GPK_CH_I_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_I_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_I_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_J" then
					{
					draw skip to _mp_GPK_CH_J_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_J_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_J_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_K" then
					{
					draw skip to _mp_GPK_CH_K_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_K_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_K_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_M" then
					{
					draw skip to _mp_GPK_CH_M_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_M_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_M_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_N" then
					{
					draw skip to _mp_GPK_CH_N_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_N_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_N_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_P" then
					{
					draw skip to _mp_GPK_CH_P_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_P_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_P_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_L" then
					{
					draw skip to _mp_GPK_CH_L_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_L_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_L_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_O" then
					{
					draw skip to _mp_GPK_CH_O_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_O_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_O_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_Q" then
					{
					draw skip to _mp_GPK_CH_Q_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_Q_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_Q_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_R" then
					{
					draw skip to _mp_GPK_CH_R_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_R_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_R_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_S" then
					{
					draw skip to _mp_GPK_CH_S_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_S_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_S_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_T" then
					{
					draw skip to _mp_GPK_CH_T_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_T_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_T_subbase_under_reop
						mark _mp_point_5
						}
					}
				
				else if _s_closest_chain = "GPK_CH_U" then
					{
					draw skip to _mp_GPK_CH_U_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_U_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_U_subbase_under_reop
						mark _mp_point_5
						}
					}
				else if _s_closest_chain = "GPK_CH_X" then
					{
					draw skip to _mp_GPK_CH_X_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_X_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_X_subbase_under_reop
						mark _mp_point_5
						}
					}
				else if _s_closest_chain = "GPK_CH_W" then
					{
					draw skip to _mp_GPK_CH_W_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_W_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_W_subbase_under_reop
						mark _mp_point_5
						}
					}
				else if _s_closest_chain = "GPK_CH_V" then
					{
					draw skip to _mp_GPK_CH_V_reop
						mark _mp_point_1
					draw skip to _mp_GPK_CH_V_aggbase_under_reop
						mark _mp_point_3
					if _d_subbase_depth > tolerance then
						{
						draw skip to _mp_GPK_CH_V_subbase_under_reop
						mark _mp_point_5
						}
					}
				else
					{
					draw dx=10 dy=10
					draw text char = ^missing closest chain name in sub draw_gore^ "mp text"
					}
				}
				
			/* now we should be at the prop edge of pavement of the closest chain */
			draw skip to _mp_point_1
			mark _mp_closest_chain_gore_point	
				
				
			/* now lets process the current chain cluster */
			if _s_side_slope = "left" then 
			  	{	
				if _s_chain = "GPK_CH_A" then
					{
					draw skip to _mp_GPK_CH_A_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_A_aggbase_under_leop
						mark _mp_point_4
					
					
					}
				else if _s_chain = "GPK_CH_B" then
					{
					draw skip to _mp_GPK_CH_B_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_B_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_D" then
					{
					draw skip to _mp_GPK_CH_D_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_D_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_C" then
					{
					draw skip to _mp_GPK_CH_C_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_C_aggbase_under_leop
						mark _mp_point_4
					
					}
					
				else if _s_chain = "GPK_CH_E" then
					{
					draw skip to _mp_GPK_CH_E_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_E_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_F" then
					{
					draw skip to _mp_GPK_CH_F_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_F_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_G" then
					{
					draw skip to _mp_GPK_CH_G_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_G_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_H" then
					{
					draw skip to _mp_GPK_CH_H_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_H_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_I" then
					{
					draw skip to _mp_GPK_CH_I_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_I_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_J" then
					{
					draw skip to _mp_GPK_CH_J_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_J_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_K" then
					{
					draw skip to _mp_GPK_CH_K_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_K_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_M" then
					{
					draw skip to _mp_GPK_CH_M_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_M_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_N" then
					{
					draw skip to _mp_GPK_CH_N_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_N_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_P" then
					{
					draw skip to _mp_GPK_CH_P_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_P_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_L" then
					{
					draw skip to _mp_GPK_CH_L_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_L_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_O" then
					{
					draw skip to _mp_GPK_CH_O_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_O_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_Q" then
					{
					draw skip to _mp_GPK_CH_Q_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_Q_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_R" then
					{
					draw skip to _mp_GPK_CH_R_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_R_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_S" then
					{
					draw skip to _mp_GPK_CH_S_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_S_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_T" then
					{
					draw skip to _mp_GPK_CH_T_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_T_aggbase_under_leop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_U" then
					{
					draw skip to _mp_GPK_CH_U_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_U_aggbase_under_leop
						mark _mp_point_4
					
					}
				else if _s_chain = "GPK_CH_X" then
					{
					draw skip to _mp_GPK_CH_X_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_X_aggbase_under_leop
						mark _mp_point_4
					
					}
				else if _s_chain = "GPK_CH_W" then
					{
					draw skip to _mp_GPK_CH_W_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_W_aggbase_under_leop
						mark _mp_point_4
					
					}
				else if _s_chain = "GPK_CH_V" then
					{
					draw skip to _mp_GPK_CH_V_leop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_V_aggbase_under_leop
						mark _mp_point_4
					
					}
				else
					{
					draw dx=10 dy=10
					draw text char = ^missing closest chain name in sub draw_gore^ "mp text"
					
					}
				}
			else /*_s_chain_side_slope ssr*/
			  {	
				if _s_chain = "GPK_CH_A" then
					{
					draw skip to _mp_GPK_CH_A_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_A_aggbase_under_reop
						mark _mp_point_4
					
					
					}
				else if _s_chain = "GPK_CH_B" then
					{
					draw skip to _mp_GPK_CH_B_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_B_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_D" then
					{
					draw skip to _mp_GPK_CH_D_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_D_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_C" then
					{
					draw skip to _mp_GPK_CH_C_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_C_aggbase_under_reop
						mark _mp_point_4
					
					}
					
				else if _s_chain = "GPK_CH_E" then
					{
					draw skip to _mp_GPK_CH_E_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_E_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_F" then
					{
					draw skip to _mp_GPK_CH_F_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_F_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_G" then
					{
					draw skip to _mp_GPK_CH_G_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_G_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_H" then
					{
					draw skip to _mp_GPK_CH_H_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_H_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_I" then
					{
					draw skip to _mp_GPK_CH_I_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_I_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_J" then
					{
					draw skip to _mp_GPK_CH_J_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_J_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_K" then
					{
					draw skip to _mp_GPK_CH_K_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_K_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_M" then
					{
					draw skip to _mp_GPK_CH_M_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_M_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_N" then
					{
					draw skip to _mp_GPK_CH_N_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_N_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_P" then
					{
					draw skip to _mp_GPK_CH_P_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_P_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_L" then
					{
					draw skip to _mp_GPK_CH_L_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_L_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_O" then
					{
					draw skip to _mp_GPK_CH_O_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_O_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_Q" then
					{
					draw skip to _mp_GPK_CH_Q_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_Q_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_R" then
					{
					draw skip to _mp_GPK_CH_R_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_R_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_S" then
					{
					draw skip to _mp_GPK_CH_S_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_S_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_T" then
					{
					draw skip to _mp_GPK_CH_T_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_T_aggbase_under_reop
						mark _mp_point_4
					
					}
				
				else if _s_chain = "GPK_CH_U" then
					{
					draw skip to _mp_GPK_CH_U_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_U_aggbase_under_reop
						mark _mp_point_4
					
					}
				else if _s_chain = "GPK_CH_X" then
					{
					draw skip to _mp_GPK_CH_X_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_X_aggbase_under_reop
						mark _mp_point_4
					
					}
				else if _s_chain = "GPK_CH_W" then
					{
					draw skip to _mp_GPK_CH_W_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_W_aggbase_under_reop
						mark _mp_point_4
					
					}
				else if _s_chain = "GPK_CH_V" then
					{
					draw skip to _mp_GPK_CH_V_reop
						mark _mp_point_2
					draw skip to _mp_GPK_CH_V_aggbase_under_reop
						mark _mp_point_4
					
					}
				else
					{
					draw dx=10 dy=10
					draw text char = ^missing closest chain name in sub draw_gore^ "mp text"
					
					}
			}
				
			/* now we should be at the current chain gore point */
			draw skip to _mp_point_2
			mark _mp_current_chain_gore_point
			
			set plot parameters "gore symb"
			draw to _mp_closest_chain_gore_point	/* this is already marked as _mp_point_1 from above code */
				
			/* now draw the gore slope label */
			if _mp_point_2.x < _mp_point_1.x then
				{
				draw skip to _mp_point_2
					mark x997 y997
				draw skip to _mp_point_1
					mark x996 y996
					
				}
			else
				{
				draw skip to _mp_point_1
					mark x997 y997
				draw skip to _mp_point_2
					mark x996 y996
				}
			call sub label_gore_slope
			draw skip to x996 y996
			/* now draw the ewks limits.....this should only apply where the gore is more than say....15' */	
			if abs(_mp_point_1.x-_mp_point_2.x)>=15 then
				{
				_s_ewks_chain = cluster baseline
				call sub draw_ewks_limits
				draw skip to x996 y996
					
				draw skip dx=0 dy=5
				_s_ewks_chain = _s_closest_chain
				call sub draw_ewks_limits
				draw skip to x996 y996	
				}
			
			
			
			
			/* still need to draw the lower levels in */
			set plot parameters "bottom of gore top depth symb"
			draw skip to _mp_point_1
			draw dx=0 dy=-abs(_d_first_course_gore_depth_in_FT)
				mark _mp_point_1
			
			draw skip to _mp_point_2
			draw dx=0 dy=-abs(_d_first_course_gore_depth_in_FT)
				mark _mp_point_2
			draw to _mp_point_1
			
			/* draws the leveling course */
			set plot parameters "bottom of gore leveling depth symb"
			draw skip to _mp_point_1
			draw dx=0 dy=-abs(_d_second_course_gore_depth_in_FT)
				mark _mp_point_1
			
			draw skip to _mp_point_2
			draw dx=0 dy=-abs(_d_second_course_gore_depth_in_FT)
				mark _mp_point_2
			draw to _mp_point_1
			
			/* draws the base course */
			set plot parameters "bottom of gore base depth symb"
			draw skip to _mp_point_1
			draw dx=0 dy=-abs(_d_third_course_gore_depth_in_FT)
				mark _mp_point_1
			
			draw skip to _mp_point_2
			draw dx=0 dy=-abs(_d_third_course_gore_depth_in_FT)
				mark _mp_point_2
			draw to _mp_point_1
			
			/* draws the fourth course */
			set plot parameters "bottom of gore fourth depth symb"
			draw skip to _mp_point_1
			draw dx=0 dy=-abs(_d_fourth_course_gore_depth_in_FT)
				mark _mp_point_1
			
			draw skip to _mp_point_2
			draw dx=0 dy=-abs(_d_fourth_course_gore_depth_in_FT)
				mark _mp_point_2
			draw to _mp_point_1
			
			/* draws the fifth course */
			set plot parameters "bottom of gore fifth depth symb"
			draw skip to _mp_point_1
			draw dx=0 dy=-abs(_d_fifth_course_gore_depth_in_FT)
				mark _mp_point_1
			
			draw skip to _mp_point_2
			draw dx=0 dy=-abs(_d_fifth_course_gore_depth_in_FT)
				mark _mp_point_2
			draw to _mp_point_1
			
			/* draws the sixth course */
			set plot parameters "bottom of gore sixth depth symb"
			draw skip to _mp_point_1
			draw dx=0 dy=-abs(_d_sixth_course_gore_depth_in_FT)
				mark _mp_point_1
			
			draw skip to _mp_point_2
			draw dx=0 dy=-abs(_d_sixth_course_gore_depth_in_FT)
				mark _mp_point_2
			draw to _mp_point_1
			
			/* draws the aggbase under the gore */
			set plot parameters "agg base symb"
			draw skip to _mp_point_1
			draw skip dx=0 dy=-abs(_d_agg_base_depth_in_FT)
				mark _mp_point_1
			
			draw skip to _mp_point_2
			draw skip dx=0 dy=-abs(_d_agg_base_depth_in_FT)
				mark _mp_point_2
			draw to _mp_point_1
			
			
			/* still need to connect the subbase below the aggbase */
			/* which will be done in the draw_subbase_from_eop_and_beyond.tmb */
			/* because subbase hasn't been marked yet */
			
			
			
			
		}
		else
			{
			/* don't do anything, the closest chain has not yet been processed */
			
			}
			
			
		}
	end sub		/* this ends the sub draw_gore */
	
	
	
	
	
	sub remember_shoulder_and_sub_slopes
		{
		_s_chain = cluster baseline
		if _s_chain = "GPK_CH_A" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_A_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_A_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_A_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_A_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_B" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_B_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_B_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_B_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_B_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_C" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_C_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_C_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_C_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_C_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_D" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_D_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_D_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_D_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_D_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_E" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_E_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_E_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_E_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_E_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_F" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_F_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_F_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_F_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_F_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_G" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_G_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_G_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_G_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_G_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_H" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_H_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_H_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_H_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_H_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_I" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_I_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_I_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_I_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_I_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_J" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_J_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_J_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_J_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_J_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_K" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_K_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_K_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_K_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_K_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_M" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_M_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_M_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_M_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_M_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_N" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_N_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_N_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_N_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_N_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_P" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_P_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_P_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_P_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_P_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_L" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_L_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_L_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_L_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_L_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_O" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_O_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_O_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_O_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_O_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_Q" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_Q_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_Q_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_Q_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_Q_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_R" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_R_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_R_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_R_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_R_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_S" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_S_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_S_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_S_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_S_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_T" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_T_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_T_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_T_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_T_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		
		else if _s_chain = "GPK_CH_U" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_U_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_U_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_U_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_U_right_subbase_slope = _d_right_subgrade_slope
				}
			}	
		
		else if _s_chain = "GPK_CH_X" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_X_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_X_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_X_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_X_right_subbase_slope = _d_right_subgrade_slope
				}
			}
		else if _s_chain = "GPK_CH_W" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_W_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_W_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_W_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_W_right_subbase_slope = _d_right_subgrade_slope
				}
			}	
		else if _s_chain = "GPK_CH_V" then
			{
			if _s_side_slope = ^left^ then
				{
				_d_GPK_CH_V_left_shoulder_slope = _d_left_shoulder_slope
				_d_GPK_CH_V_left_subbase_slope = _d_left_subgrade_slope
				}
			else if _s_side_slope = ^right^ then
				{
				_d_GPK_CH_V_right_shoulder_slope = _d_right_shoulder_slope
				_d_GPK_CH_V_right_subbase_slope = _d_right_subgrade_slope
				}
			}	
		
		else
			{
			draw dx=10 dy=10
			draw text char = ^missing chain name in sub remember_shoulder_and_sub_slopes^ "mp text"
			}
		
		}	/* this ends the remember_shoulder_and_sub_slopes */
	end sub	
	
	
	
	
	
	
	sub mark_tie_road_together_point
	{ 
		draw skip to x3 y3
		 if _s_side_slope = ^left^ then 
		  {	
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_left_tie_road_together
				draw text char = ^_mp_GPK_CH_A_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_A_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_A_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_A_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_A_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_left_tie_road_together
				draw text char = ^_mp_GPK_CH_B_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_B_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_B_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_B_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_B_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_left_tie_road_together
				draw text char = ^_mp_GPK_CH_D_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_D_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_D_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_D_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_D_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_left_tie_road_together
				draw text char = ^_mp_GPK_CH_C_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_C_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_C_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_C_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_C_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_left_tie_road_together
				draw text char = ^_mp_GPK_CH_E_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_E_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_E_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_E_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_E_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_left_tie_road_together
				draw text char = ^_mp_GPK_CH_F_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_F_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_F_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_F_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_F_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_left_tie_road_together
				draw text char = ^_mp_GPK_CH_G_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_G_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_G_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_G_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_G_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_left_tie_road_together
				draw text char = ^_mp_GPK_CH_H_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_H_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_H_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_H_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_H_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_left_tie_road_together
				draw text char = ^_mp_GPK_CH_I_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_I_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_I_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_I_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_I_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_left_tie_road_together
				draw text char = ^_mp_GPK_CH_J_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_J_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_J_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_J_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_J_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_left_tie_road_together
				draw text char = ^_mp_GPK_CH_K_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_K_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_K_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_K_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_K_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_left_tie_road_together
				draw text char = ^_mp_GPK_CH_M_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_M_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_M_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_M_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_M_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_left_tie_road_together
				draw text char = ^_mp_GPK_CH_N_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_N_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_N_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_N_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_N_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_left_tie_road_together
				draw text char = ^_mp_GPK_CH_P_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_P_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_P_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_P_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_P_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_left_tie_road_together
				draw text char = ^_mp_GPK_CH_L_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_L_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_L_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_L_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_L_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_left_tie_road_together
				draw text char = ^_mp_GPK_CH_O_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_O_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_O_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_O_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_O_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_left_tie_road_together
				draw text char = ^_mp_GPK_CH_Q_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_Q_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_Q_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_Q_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_Q_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_left_tie_road_together
				draw text char = ^_mp_GPK_CH_R_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_R_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_R_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_R_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_R_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_left_tie_road_together
				draw text char = ^_mp_GPK_CH_S_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_S_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_S_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_S_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_S_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_left_tie_road_together
				draw text char = ^_mp_GPK_CH_T_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_T_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_T_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_T_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_T_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_left_tie_road_together
				draw text char = ^_mp_GPK_CH_U_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_U_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_U_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_U_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_U_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_left_tie_road_together
				draw text char = ^_mp_GPK_CH_X_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_X_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_X_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_X_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_X_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_left_tie_road_together
				draw text char = ^_mp_GPK_CH_W_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_W_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_W_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_W_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_W_left_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_left_tie_road_together
				draw text char = ^_mp_GPK_CH_V_left_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_V_left_tie_agg_together
				draw text char = ^_mp_GPK_CH_V_left_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_V_left_tie_subbase_together
				draw text char = ^_mp_GPK_CH_V_left_tie_subbase_together^ "mp text"
				}			
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub mark_tie_road_together_point on left^ "mp text"
				}
			}
		else /*ssr*/
		  {	
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				mark _mp_GPK_CH_A_right_tie_road_together
				draw text char = ^_mp_GPK_CH_A_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_A_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_A_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_A_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_A_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_B" then
				{
				mark _mp_GPK_CH_B_right_tie_road_together
				draw text char = ^_mp_GPK_CH_B_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_B_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_B_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_B_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_B_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_D" then
				{
				mark _mp_GPK_CH_D_right_tie_road_together
				draw text char = ^_mp_GPK_CH_D_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_D_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_D_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_D_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_D_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_C" then
				{
				mark _mp_GPK_CH_C_right_tie_road_together
				draw text char = ^_mp_GPK_CH_C_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_C_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_C_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_C_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_C_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_E" then
				{
				mark _mp_GPK_CH_E_right_tie_road_together
				draw text char = ^_mp_GPK_CH_E_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_E_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_E_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_E_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_E_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_F" then
				{
				mark _mp_GPK_CH_F_right_tie_road_together
				draw text char = ^_mp_GPK_CH_F_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_F_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_F_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_F_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_F_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_G" then
				{
				mark _mp_GPK_CH_G_right_tie_road_together
				draw text char = ^_mp_GPK_CH_G_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_G_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_G_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_G_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_G_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_H" then
				{
				mark _mp_GPK_CH_H_right_tie_road_together
				draw text char = ^_mp_GPK_CH_H_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_H_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_H_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_H_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_H_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_I" then
				{
				mark _mp_GPK_CH_I_right_tie_road_together
				draw text char = ^_mp_GPK_CH_I_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_I_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_I_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_I_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_I_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_J" then
				{
				mark _mp_GPK_CH_J_right_tie_road_together
				draw text char = ^_mp_GPK_CH_J_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_J_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_J_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_J_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_J_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_K" then
				{
				mark _mp_GPK_CH_K_right_tie_road_together
				draw text char = ^_mp_GPK_CH_K_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_K_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_K_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_K_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_K_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_M" then
				{
				mark _mp_GPK_CH_M_right_tie_road_together
				draw text char = ^_mp_GPK_CH_M_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_M_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_M_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_M_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_M_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_N" then
				{
				mark _mp_GPK_CH_N_right_tie_road_together
				draw text char = ^_mp_GPK_CH_N_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_N_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_N_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_N_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_N_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_P" then
				{
				mark _mp_GPK_CH_P_right_tie_road_together
				draw text char = ^_mp_GPK_CH_P_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_P_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_P_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_P_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_P_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_L" then
				{
				mark _mp_GPK_CH_L_right_tie_road_together
				draw text char = ^_mp_GPK_CH_L_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_L_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_L_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_L_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_L_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_O" then
				{
				mark _mp_GPK_CH_O_right_tie_road_together
				draw text char = ^_mp_GPK_CH_O_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_O_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_O_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_O_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_O_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_Q" then
				{
				mark _mp_GPK_CH_Q_right_tie_road_together
				draw text char = ^_mp_GPK_CH_Q_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_Q_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_Q_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_Q_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_Q_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_right_tie_road_together
				draw text char = ^_mp_GPK_CH_R_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_R_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_R_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_R_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_R_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_right_tie_road_together
				draw text char = ^_mp_GPK_CH_S_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_S_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_S_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_S_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_S_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_right_tie_road_together
				draw text char = ^_mp_GPK_CH_T_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_T_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_T_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_T_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_T_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_right_tie_road_together
				draw text char = ^_mp_GPK_CH_U_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_U_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_U_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_U_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_U_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_right_tie_road_together
				draw text char = ^_mp_GPK_CH_X_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_X_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_X_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_X_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_X_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_W" then
				{
				mark _mp_GPK_CH_W_right_tie_road_together
				draw text char = ^_mp_GPK_CH_W_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_W_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_W_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_W_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_W_right_tie_subbase_together^ "mp text"
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_right_tie_road_together
				draw text char = ^_mp_GPK_CH_V_right_tie_road_together^ "mp text"
				
				draw skip to _mp_tie_aggbase_to_ground
				mark _mp_GPK_CH_V_right_tie_agg_together
				draw text char = ^_mp_GPK_CH_V_right_tie_agg_together^ "mp text"
				
				draw skip to x567 y567	/* this is the subbase point where the 1:1 would start */
				mark _mp_GPK_CH_V_right_tie_subbase_together
				draw text char = ^_mp_GPK_CH_V_right_tie_subbase_together^ "mp text"
				}			
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub mark_tie_road_together_point on right^ "mp text"
				}
			}
		}
		end sub	/* ends the mark_tie_road_together_point subroutine */
	
	
/* add this subroutine to the proj spec subs */		
	
	
	sub draw_to_tie_road_together_point
	{ 
		mark x3 y3	/* this is the start of the tie down with the current chain being processed */
		 if _s_closest_chain_side_slope = ^left^ then 
		  {	
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw to _mp_GPK_CH_A_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_A_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_A_left_tie_agg_together
					draw rise:run = _d_GPK_CH_A_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_A_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_A_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw to _mp_GPK_CH_B_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_B_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_B_left_tie_agg_together
					draw rise:run = _d_GPK_CH_B_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_B_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_B_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw to _mp_GPK_CH_D_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_D_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_D_left_tie_agg_together
					draw rise:run = _d_GPK_CH_D_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_D_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_D_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw to _mp_GPK_CH_C_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_C_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_C_left_tie_agg_together
					draw rise:run = _d_GPK_CH_C_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_C_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_C_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw to _mp_GPK_CH_E_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_E_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_E_left_tie_agg_together
					draw rise:run = _d_GPK_CH_E_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_E_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_E_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw to _mp_GPK_CH_F_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_F_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_F_left_tie_agg_together
					draw rise:run = _d_GPK_CH_F_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_F_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_F_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw to _mp_GPK_CH_G_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_G_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_G_left_tie_agg_together
					draw rise:run = _d_GPK_CH_G_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_G_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_G_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw to _mp_GPK_CH_H_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_H_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_H_left_tie_agg_together
					draw rise:run = _d_GPK_CH_H_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_H_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_H_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw to _mp_GPK_CH_I_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_I_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_I_left_tie_agg_together
					draw rise:run = _d_GPK_CH_I_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_I_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_I_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw to _mp_GPK_CH_J_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_J_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_J_left_tie_agg_together
					draw rise:run = _d_GPK_CH_J_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_J_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_J_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw to _mp_GPK_CH_K_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_K_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_K_left_tie_agg_together
					draw rise:run = _d_GPK_CH_K_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_K_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_K_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw to _mp_GPK_CH_M_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_M_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_M_left_tie_agg_together
					draw rise:run = _d_GPK_CH_M_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_M_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_M_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw to _mp_GPK_CH_N_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_N_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_N_left_tie_agg_together
					draw rise:run = _d_GPK_CH_N_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_N_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_N_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw to _mp_GPK_CH_P_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_P_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_P_left_tie_agg_together
					draw rise:run = _d_GPK_CH_P_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_P_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_P_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw to _mp_GPK_CH_L_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_L_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_L_left_tie_agg_together
					draw rise:run = _d_GPK_CH_L_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_L_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_L_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw to _mp_GPK_CH_O_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_O_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_O_left_tie_agg_together
					draw rise:run = _d_GPK_CH_O_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_O_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_O_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw to _mp_GPK_CH_Q_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_Q_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_Q_left_tie_agg_together
					draw rise:run = _d_GPK_CH_Q_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_Q_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_Q_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw to _mp_GPK_CH_R_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_R_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_R_left_tie_agg_together
					draw rise:run = _d_GPK_CH_R_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_R_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_R_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw to _mp_GPK_CH_S_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_S_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_S_left_tie_agg_together
					draw rise:run = _d_GPK_CH_S_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_S_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_S_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw to _mp_GPK_CH_T_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_T_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_T_left_tie_agg_together
					draw rise:run = _d_GPK_CH_T_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_T_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_T_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw to _mp_GPK_CH_U_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_U_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_U_left_tie_agg_together
					draw rise:run = _d_GPK_CH_U_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_U_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_U_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw to _mp_GPK_CH_X_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_X_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_X_left_tie_agg_together
					draw rise:run = _d_GPK_CH_X_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_X_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_X_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw to _mp_GPK_CH_W_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_W_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_W_left_tie_agg_together
					draw rise:run = _d_GPK_CH_W_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_W_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_W_left_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw to _mp_GPK_CH_V_left_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_V_left_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_V_left_tie_agg_together
					draw rise:run = _d_GPK_CH_V_left_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_V_left_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_V_left_tie_subbase_together
					}
				
				}		
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_to_tie_road_together_point^ "mp text"
				}
			}
		else /*ssr*/
		  {	
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw to _mp_GPK_CH_A_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_A_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_A_right_tie_agg_together
					draw rise:run = _d_GPK_CH_A_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_A_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_A_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw to _mp_GPK_CH_B_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_B_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_B_right_tie_agg_together
					draw rise:run = _d_GPK_CH_B_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_B_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_B_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw to _mp_GPK_CH_D_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_D_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_D_right_tie_agg_together
					draw rise:run = _d_GPK_CH_D_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_D_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_D_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw to _mp_GPK_CH_C_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_C_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_C_right_tie_agg_together
					draw rise:run = _d_GPK_CH_C_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_C_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_C_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw to _mp_GPK_CH_E_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_E_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_E_right_tie_agg_together
					draw rise:run = _d_GPK_CH_E_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_E_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_E_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw to _mp_GPK_CH_F_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_F_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_F_right_tie_agg_together
					draw rise:run = _d_GPK_CH_F_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_F_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_F_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw to _mp_GPK_CH_G_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_G_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_G_right_tie_agg_together
					draw rise:run = _d_GPK_CH_G_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_G_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_G_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw to _mp_GPK_CH_H_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_H_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_H_right_tie_agg_together
					draw rise:run = _d_GPK_CH_H_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_H_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_H_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw to _mp_GPK_CH_I_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_I_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_I_right_tie_agg_together
					draw rise:run = _d_GPK_CH_I_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_I_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_I_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw to _mp_GPK_CH_J_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_J_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_J_right_tie_agg_together
					draw rise:run = _d_GPK_CH_J_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_J_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_J_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw to _mp_GPK_CH_K_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_K_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_K_right_tie_agg_together
					draw rise:run = _d_GPK_CH_K_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_K_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_K_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw to _mp_GPK_CH_M_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_M_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_M_right_tie_agg_together
					draw rise:run = _d_GPK_CH_M_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_M_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_M_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw to _mp_GPK_CH_N_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_N_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_N_right_tie_agg_together
					draw rise:run = _d_GPK_CH_N_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_N_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_N_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw to _mp_GPK_CH_P_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_P_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_P_right_tie_agg_together
					draw rise:run = _d_GPK_CH_P_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_P_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_P_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw to _mp_GPK_CH_L_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_L_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_L_right_tie_agg_together
					draw rise:run = _d_GPK_CH_L_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_L_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_L_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw to _mp_GPK_CH_O_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_O_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_O_right_tie_agg_together
					draw rise:run = _d_GPK_CH_O_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_O_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_O_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw to _mp_GPK_CH_Q_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_Q_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_Q_right_tie_agg_together
					draw rise:run = _d_GPK_CH_Q_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_Q_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_Q_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw to _mp_GPK_CH_R_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_R_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_R_right_tie_agg_together
					draw rise:run = _d_GPK_CH_R_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_R_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_R_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw to _mp_GPK_CH_S_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_S_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_S_right_tie_agg_together
					draw rise:run = _d_GPK_CH_S_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_S_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_S_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw to _mp_GPK_CH_T_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_T_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_T_right_tie_agg_together
					draw rise:run = _d_GPK_CH_T_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_T_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_T_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw to _mp_GPK_CH_U_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_U_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_U_right_tie_agg_together
					draw rise:run = _d_GPK_CH_U_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_U_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_U_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw to _mp_GPK_CH_X_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_X_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_X_right_tie_agg_together
					draw rise:run = _d_GPK_CH_X_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_X_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_X_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw to _mp_GPK_CH_W_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_W_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_W_right_tie_agg_together
					draw rise:run = _d_GPK_CH_W_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_W_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_W_right_tie_subbase_together
					}
				
				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw to _mp_GPK_CH_V_right_tie_road_together
					mark x4 y4
				if abs(x3-x4)> _d_max_connect_subbase_distance_for_2_roads then
					{
					/* work on the current chain being processed first */
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw rise:run = 1:1 to intersection x3 y3 x4 y4
						mark x555 y555
					
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw slope = _d_shoulderslope to intersection x567 y567 x555 y555
							draw to x555 y555
							
					set plot parameters "subbase symb"
					draw skip to _mp_GPK_CH_V_right_tie_subbase_together
						mark x554 y554
					draw rise:run = 1:-1 to intersection x3 y3 x4 y4
						mark x556 y556
						
					set plot parameters "agg base symb"
					draw skip to _mp_GPK_CH_V_right_tie_agg_together
					draw rise:run = _d_GPK_CH_V_right_shoulder_slope:-100 to intersection x554 y554 x556 y556
					draw to x556 y556
					}
				
				else	
					{
					set plot parameters "agg base symb"
					draw skip to _mp_tie_aggbase_to_ground
					draw to _mp_GPK_CH_V_right_tie_agg_together
					
					set plot parameters "subbase symb"
					draw skip to x567 y567
					draw to _mp_GPK_CH_V_right_tie_subbase_together
					}
				
				}		
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_to_tie_road_together_point^ "mp text"
				}
			}
		draw skip to x4 y4
		}
		end sub	/* ends the draw_to_tie_road_together_point subroutine */
	
	
	
	sub remember_double_face_barrier_info
	{
	
	
	
	/* now store the above variables for the current chain depending on the ss condition */
	if _s_side_slope = ^left^ then
		{
		_d_curb_dx_right_of_barrier = _d_curb_dx
		_d_curb_dy_right_of_barrier = _d_curb_dy
		
		_d_adjacent_shoulder_slope_right_of_bar = _d_adjacent_shoulder_slope
		_d_reg_shoulder_slope_right_of_bar = _d_ShoulderSlope
		_d_adv_shoulder_slope_right_of_bar = _d_adv_shoulder_slope
		_s_found_curb_right_of_bar  = _s_found_curb	/* yes or no */
		_s_found_adv_shoulder_right_of_bar = _s_found_adv_shoulder
		_s_found_regular_shoulder_right_of_bar = _s_found_regular_shoulder
		_s_curb_found_right_of_bar = _s_curb_found	/* type of curb */
		
		}
	
	else if _s_side_slope = ^right^ then
		{
		_d_curb_dx_left_of_barrier = _d_curb_dx
		_d_curb_dy_left_of_barrier = _d_curb_dy
		
		_d_adjacent_shoulder_slope_left_of_bar = _d_adjacent_shoulder_slope
		_d_reg_shoulder_slope_left_of_bar = _d_ShoulderSlope
		_d_adv_shoulder_slope_left_of_bar = _d_adv_shoulder_slope
		_s_found_curb_left_of_bar  = _s_found_curb	/* yes or no */
		_s_found_adv_shoulder_left_of_bar = _s_found_adv_shoulder
		_s_found_regular_shoulder_left_of_bar = _s_found_regular_shoulder
		_s_curb_found_left_of_bar = _s_curb_found	/* type of curb */
		}
	
	else
		{
		/* should see this */
		}
	
	
	
	
	
	draw skip to _mp_current_eop
		
	/* now lets process the current chain cluster */
	if _s_side_slope = "left" then 
		{
		
		mark x501 y501
		if _s_chain = "GPK_CH_A" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_A_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_A_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_A_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_A_tent_start_of_bar_left
				mark x101 y101
			
			_d_GPK_CH_A_curb_dx_left = _d_curb_dx
			_d_GPK_CH_A_curb_dy_left = _d_curb_dy
			
			_d_GPK_CH_A_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_A_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_A_adv_shoulder_slope_left = _d_adv_shoulder_slope
			
			_s_GPK_CH_A_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_A_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_A_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_A_curb_found_left = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_B" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_B_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_B_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_B_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_B_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_B_curb_dx_left = _d_curb_dx
			_d_GPK_CH_B_curb_dy_left = _d_curb_dy
			_d_GPK_CH_B_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_B_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_B_adv_shoulder_slope_left = _d_adv_shoulder_slope
			
			_s_GPK_CH_B_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_B_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_B_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_B_curb_found_left = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_D" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_D_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_D_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_D_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_D_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_D_curb_dx_left = _d_curb_dx
			_d_GPK_CH_D_curb_dy_left = _d_curb_dy
			_d_GPK_CH_D_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_D_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_D_adv_shoulder_slope_left = _d_adv_shoulder_slope
			
			_s_GPK_CH_D_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_D_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_D_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_D_curb_found_left = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_C" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_C_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_C_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_C_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_C_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_C_curb_dx_left = _d_curb_dx
			_d_GPK_CH_C_curb_dy_left = _d_curb_dy
			_d_GPK_CH_C_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_C_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_C_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_C_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_C_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_C_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_C_curb_found_left = _s_curb_found	/* type of curb */
			
			
			}	
		else if _s_chain = "GPK_CH_E" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_E_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_E_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_E_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_E_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_E_curb_dx_left = _d_curb_dx
			_d_GPK_CH_E_curb_dy_left = _d_curb_dy
			_d_GPK_CH_E_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_E_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_E_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_E_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_E_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_E_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_E_curb_found_left = _s_curb_found	/* type of curb */
			
			
			}
		else if _s_chain = "GPK_CH_F" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_F_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_F_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_F_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_F_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_F_curb_dx_left = _d_curb_dx
			_d_GPK_CH_F_curb_dy_left = _d_curb_dy
			_d_GPK_CH_F_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_F_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_F_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_F_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_F_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_F_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_F_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_G" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_G_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_G_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_G_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_G_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_G_curb_dx_left = _d_curb_dx
			_d_GPK_CH_G_curb_dy_left = _d_curb_dy
			_d_GPK_CH_G_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_G_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_G_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_G_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_G_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_G_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_G_curb_found_left = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_H" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_H_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_H_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_H_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_H_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_H_curb_dx_left = _d_curb_dx
			_d_GPK_CH_H_curb_dy_left = _d_curb_dy
			_d_GPK_CH_H_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_H_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_H_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_H_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_H_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_H_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_H_curb_found_left = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_I" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_I_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_I_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_I_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_I_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_I_curb_dx_left = _d_curb_dx
			_d_GPK_CH_I_curb_dy_left = _d_curb_dy
			_d_GPK_CH_I_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_I_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_I_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_I_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_I_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_I_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_I_curb_found_left = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_J" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_J_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_J_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_J_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_J_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_J_curb_dx_left = _d_curb_dx
			_d_GPK_CH_J_curb_dy_left = _d_curb_dy
			_d_GPK_CH_J_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_J_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_J_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_J_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_J_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_J_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_J_curb_found_left = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_K" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_K_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_K_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_K_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_K_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_K_curb_dx_left = _d_curb_dx
			_d_GPK_CH_K_curb_dy_left = _d_curb_dy
			_d_GPK_CH_K_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_K_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_K_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_K_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_K_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_K_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_K_curb_found_left = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_L" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_L_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_L_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_L_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_L_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_L_curb_dx_left = _d_curb_dx
			_d_GPK_CH_L_curb_dy_left = _d_curb_dy
			_d_GPK_CH_L_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_L_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_L_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_L_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_L_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_L_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_L_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_M" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_M_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_M_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_M_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_M_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_M_curb_dx_left = _d_curb_dx
			_d_GPK_CH_M_curb_dy_left = _d_curb_dy
			_d_GPK_CH_M_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_M_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_M_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_M_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_M_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_M_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_M_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_N" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_N_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_N_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_N_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_N_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_N_curb_dx_left = _d_curb_dx
			_d_GPK_CH_N_curb_dy_left = _d_curb_dy
			_d_GPK_CH_N_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_N_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_N_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_N_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_N_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_N_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_N_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_P" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_P_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_P_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_P_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_P_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_P_curb_dx_left = _d_curb_dx
			_d_GPK_CH_P_curb_dy_left = _d_curb_dy
			_d_GPK_CH_P_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_P_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_P_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_P_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_P_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_P_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_P_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_O" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_O_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_O_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_O_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_O_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_O_curb_dx_left = _d_curb_dx
			_d_GPK_CH_O_curb_dy_left = _d_curb_dy
			_d_GPK_CH_O_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_O_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_O_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_O_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_O_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_O_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_O_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_Q" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_Q_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_Q_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_Q_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_Q_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_Q_curb_dx_left = _d_curb_dx
			_d_GPK_CH_Q_curb_dy_left = _d_curb_dy
			_d_GPK_CH_Q_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_Q_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_Q_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_Q_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_Q_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_Q_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_Q_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_R" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_R_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_R_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_R_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_R_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_R_curb_dx_left = _d_curb_dx
			_d_GPK_CH_R_curb_dy_left = _d_curb_dy
			_d_GPK_CH_R_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_R_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_R_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_R_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_R_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_R_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_R_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_S" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_S_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_S_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_S_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_S_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_S_curb_dx_left = _d_curb_dx
			_d_GPK_CH_S_curb_dy_left = _d_curb_dy
			_d_GPK_CH_S_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_S_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_S_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_S_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_S_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_S_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_S_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_T" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_T_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_T_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_T_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_T_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_T_curb_dx_left = _d_curb_dx
			_d_GPK_CH_T_curb_dy_left = _d_curb_dy
			_d_GPK_CH_T_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_T_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_T_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_T_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_T_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_T_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_T_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_U" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_U_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_U_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_U_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_U_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_U_curb_dx_left = _d_curb_dx
			_d_GPK_CH_U_curb_dy_left = _d_curb_dy
			_d_GPK_CH_U_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_U_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_U_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_U_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_U_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_U_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_U_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_X" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_X_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_X_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_X_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_X_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_X_curb_dx_left = _d_curb_dx
			_d_GPK_CH_X_curb_dy_left = _d_curb_dy
			_d_GPK_CH_X_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_X_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_X_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_X_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_X_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_X_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_X_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_W" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_W_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_W_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_W_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_W_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_W_curb_dx_left = _d_curb_dx
			_d_GPK_CH_W_curb_dy_left = _d_curb_dy
			_d_GPK_CH_W_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_W_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_W_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_W_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_W_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_W_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_W_curb_found_left = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_V" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_V_tent_leos
				mark x401 y401
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_V_tent_ltoc
				mark x301 y301
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_V_tent_adv_leos
				mark x201 y201
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_V_tent_start_of_bar_left
				mark x101 y101
			_d_GPK_CH_V_curb_dx_left = _d_curb_dx
			_d_GPK_CH_V_curb_dy_left = _d_curb_dy
			_d_GPK_CH_V_adjacent_shoulder_slope_left = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_V_reg_shoulder_slope_left = _d_ShoulderSlope
			_d_GPK_CH_V_adv_shoulder_slope_left = _d_adv_shoulder_slope
			_s_GPK_CH_V_found_curb_left = _s_found_curb	/* yes or no */
			_s_GPK_CH_V_found_adv_shldr_left = _s_found_adv_shoulder
			_s_GPK_CH_V_found_regular_shldr_left = _s_found_regular_shoulder
			_s_GPK_CH_V_curb_found_left = _s_curb_found	/* type of curb */
			}
		else
			{
			draw dx=10 dy=10
			draw text char = ^missing closest chain name in sub draw_gore^ "mp text"
			}
		}
	
	else if _s_side_slope = "right" then 
		{
		
		mark x500 y500
		if _s_chain = "GPK_CH_A" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_A_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_A_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_A_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_A_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_A_curb_dx_right = _d_curb_dx
			_d_GPK_CH_A_curb_dy_right = _d_curb_dy
			
			_d_GPK_CH_A_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_A_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_A_adv_shoulder_slope_right = _d_adv_shoulder_slope
			
			_s_GPK_CH_A_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_A_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_A_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_A_curb_found_right = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_B" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_B_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_B_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_B_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_B_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_B_curb_dx_right = _d_curb_dx
			_d_GPK_CH_B_curb_dy_right = _d_curb_dy
			_d_GPK_CH_B_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_B_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_B_adv_shoulder_slope_right = _d_adv_shoulder_slope
			
			_s_GPK_CH_B_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_B_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_B_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_B_curb_found_right = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_D" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_D_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_D_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_D_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_D_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_D_curb_dx_right = _d_curb_dx
			_d_GPK_CH_D_curb_dy_right = _d_curb_dy
			_d_GPK_CH_D_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_D_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_D_adv_shoulder_slope_right = _d_adv_shoulder_slope
			
			_s_GPK_CH_D_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_D_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_D_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_D_curb_found_right = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_C" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_C_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_C_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_C_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_C_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_C_curb_dx_right = _d_curb_dx
			_d_GPK_CH_C_curb_dy_right = _d_curb_dy
			_d_GPK_CH_C_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_C_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_C_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_C_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_C_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_C_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_C_curb_found_right = _s_curb_found	/* type of curb */
			
			
			}	
		else if _s_chain = "GPK_CH_E" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_E_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_E_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_E_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_E_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_E_curb_dx_right = _d_curb_dx
			_d_GPK_CH_E_curb_dy_right = _d_curb_dy
			_d_GPK_CH_E_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_E_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_E_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_E_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_E_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_E_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_E_curb_found_right = _s_curb_found	/* type of curb */
			
			
			}
		else if _s_chain = "GPK_CH_F" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_F_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_F_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_F_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_F_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_F_curb_dx_right = _d_curb_dx
			_d_GPK_CH_F_curb_dy_right = _d_curb_dy
			_d_GPK_CH_F_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_F_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_F_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_F_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_F_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_F_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_F_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_G" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_G_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_G_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_G_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_G_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_G_curb_dx_right = _d_curb_dx
			_d_GPK_CH_G_curb_dy_right = _d_curb_dy
			_d_GPK_CH_G_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_G_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_G_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_G_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_G_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_G_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_G_curb_found_right = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_H" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_H_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_H_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_H_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_H_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_H_curb_dx_right = _d_curb_dx
			_d_GPK_CH_H_curb_dy_right = _d_curb_dy
			_d_GPK_CH_H_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_H_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_H_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_H_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_H_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_H_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_H_curb_found_right = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_I" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_I_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_I_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_I_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_I_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_I_curb_dx_right = _d_curb_dx
			_d_GPK_CH_I_curb_dy_right = _d_curb_dy
			_d_GPK_CH_I_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_I_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_I_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_I_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_I_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_I_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_I_curb_found_right = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_J" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_J_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_J_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_J_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_J_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_J_curb_dx_right = _d_curb_dx
			_d_GPK_CH_J_curb_dy_right = _d_curb_dy
			_d_GPK_CH_J_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_J_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_J_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_J_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_J_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_J_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_J_curb_found_right = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_K" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_K_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_K_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_K_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_K_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_K_curb_dx_right = _d_curb_dx
			_d_GPK_CH_K_curb_dy_right = _d_curb_dy
			_d_GPK_CH_K_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_K_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_K_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_K_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_K_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_K_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_K_curb_found_right = _s_curb_found	/* type of curb */
			
			}
		else if _s_chain = "GPK_CH_L" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_L_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_L_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_L_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_L_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_L_curb_dx_right = _d_curb_dx
			_d_GPK_CH_L_curb_dy_right = _d_curb_dy
			_d_GPK_CH_L_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_L_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_L_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_L_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_L_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_L_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_L_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_M" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_M_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_M_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_M_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_M_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_M_curb_dx_right = _d_curb_dx
			_d_GPK_CH_M_curb_dy_right = _d_curb_dy
			_d_GPK_CH_M_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_M_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_M_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_M_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_M_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_M_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_M_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_N" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_N_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_N_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_N_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_N_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_N_curb_dx_right = _d_curb_dx
			_d_GPK_CH_N_curb_dy_right = _d_curb_dy
			_d_GPK_CH_N_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_N_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_N_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_N_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_N_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_N_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_N_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_P" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_P_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_P_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_P_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_P_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_P_curb_dx_right = _d_curb_dx
			_d_GPK_CH_P_curb_dy_right = _d_curb_dy
			_d_GPK_CH_P_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_P_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_P_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_P_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_P_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_P_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_P_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_O" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_O_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_O_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_O_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_O_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_O_curb_dx_right = _d_curb_dx
			_d_GPK_CH_O_curb_dy_right = _d_curb_dy
			_d_GPK_CH_O_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_O_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_O_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_O_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_O_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_O_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_O_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_Q" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_Q_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_Q_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_Q_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_Q_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_Q_curb_dx_right = _d_curb_dx
			_d_GPK_CH_Q_curb_dy_right = _d_curb_dy
			_d_GPK_CH_Q_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_Q_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_Q_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_Q_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_Q_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_Q_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_Q_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_R" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_R_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_R_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_R_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_R_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_R_curb_dx_right = _d_curb_dx
			_d_GPK_CH_R_curb_dy_right = _d_curb_dy
			_d_GPK_CH_R_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_R_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_R_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_R_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_R_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_R_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_R_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_S" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_S_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_S_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_S_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_S_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_S_curb_dx_right = _d_curb_dx
			_d_GPK_CH_S_curb_dy_right = _d_curb_dy
			_d_GPK_CH_S_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_S_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_S_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_S_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_S_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_S_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_S_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_T" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_T_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_T_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_T_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_T_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_T_curb_dx_right = _d_curb_dx
			_d_GPK_CH_T_curb_dy_right = _d_curb_dy
			_d_GPK_CH_T_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_T_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_T_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_T_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_T_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_T_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_T_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_U" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_U_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_U_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_U_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_U_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_U_curb_dx_right = _d_curb_dx
			_d_GPK_CH_U_curb_dy_right = _d_curb_dy
			_d_GPK_CH_U_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_U_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_U_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_U_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_U_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_U_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_U_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_X" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_X_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_X_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_X_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_X_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_X_curb_dx_right = _d_curb_dx
			_d_GPK_CH_X_curb_dy_right = _d_curb_dy
			_d_GPK_CH_X_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_X_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_X_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_X_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_X_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_X_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_X_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_W" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_W_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_W_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_W_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_W_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_W_curb_dx_right = _d_curb_dx
			_d_GPK_CH_W_curb_dy_right = _d_curb_dy
			_d_GPK_CH_W_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_W_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_W_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_W_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_W_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_W_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_W_curb_found_right = _s_curb_found	/* type of curb */
			}
		else if _s_chain = "GPK_CH_V" then
			{
			draw skip to _mp_tent_eos
				mark _mp_GPK_CH_V_tent_reos
				mark x400 y400
			draw skip to _mp_tent_toc
				mark _mp_GPK_CH_V_tent_rtoc
				mark x300 y300
			draw skip to _mp_tent_adv_eos
				mark _mp_GPK_CH_V_tent_adv_reos
				mark x200 y200
			draw skip to _mp_tent_start_of_barrier
				mark _mp_GPK_CH_V_tent_start_of_bar_right
				mark x100 y100
			_d_GPK_CH_V_curb_dx_right = _d_curb_dx
			_d_GPK_CH_V_curb_dy_right = _d_curb_dy
			_d_GPK_CH_V_adjacent_shoulder_slope_right = _d_adjacent_shoulder_slope
			
			_d_GPK_CH_V_reg_shoulder_slope_right = _d_ShoulderSlope
			_d_GPK_CH_V_adv_shoulder_slope_right = _d_adv_shoulder_slope
			_s_GPK_CH_V_found_curb_right = _s_found_curb	/* yes or no */
			_s_GPK_CH_V_found_adv_shldr_right = _s_found_adv_shoulder
			_s_GPK_CH_V_found_regular_shldr_right = _s_found_regular_shoulder
			_s_GPK_CH_V_curb_found_right = _s_curb_found	/* type of curb */
			}
		else
			{
			draw dx=10 dy=10
			draw text char = ^missing closest chain name in sub draw_gore^ "mp text"
			}
		}
	
	}
	end sub /* ends remember_double_face_barrier_info */
	
	
	
	
	
	
	sub label_vg_flow_line
		{ 
		
		 if _s_side_slope = ^left^ then 
		  {	
			_s_chain = cluster baseline
			
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				
				mark _mp_GPK_CH_A_VG_FLOW_LEFT
				}
			else if _s_chain = "GPK_CH_B" then
				{
									 
				mark _mp_GPK_CH_B_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				
				mark _mp_GPK_CH_D_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				
				mark _mp_GPK_CH_C_VG_FLOW_LEFT
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				
				mark _mp_GPK_CH_E_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				
				mark _mp_GPK_CH_F_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				
				mark _mp_GPK_CH_G_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				
				mark _mp_GPK_CH_H_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				
				mark _mp_GPK_CH_I_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				
				mark _mp_GPK_CH_J_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				
				mark _mp_GPK_CH_K_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				
				mark _mp_GPK_CH_M_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				
				mark _mp_GPK_CH_N_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				
				mark _mp_GPK_CH_P_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				
				mark _mp_GPK_CH_L_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				
				mark _mp_GPK_CH_O_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				
				mark _mp_GPK_CH_Q_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				
				mark _mp_GPK_CH_R_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				
				mark _mp_GPK_CH_S_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				
				mark _mp_GPK_CH_T_VG_FLOW_LEFT
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				
				mark _mp_GPK_CH_U_VG_FLOW_LEFT
				}
			else if _s_chain = "GPK_CH_X" then
				{
				
				mark _mp_GPK_CH_X_VG_FLOW_LEFT
				}
			else if _s_chain = "GPK_CH_W" then
				{
				
				mark _mp_GPK_CH_W_VG_FLOW_LEFT
				}
			else if _s_chain = "GPK_CH_V" then
				{
				
				mark _mp_GPK_CH_V_VG_FLOW_LEFT
				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_vg_flow_line^ "mp text"
				}
			}
		else /*ssr*/
		  {	
			_s_chain = cluster baseline
			
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				     
				mark _mp_GPK_CH_A_VG_FLOW_right
				}
			else if _s_chain = "GPK_CH_B" then
				{
				
				mark _mp_GPK_CH_B_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				
				mark _mp_GPK_CH_D_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				
				mark _mp_GPK_CH_C_VG_FLOW_right
				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				
				mark _mp_GPK_CH_E_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				
				mark _mp_GPK_CH_F_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				
				mark _mp_GPK_CH_G_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				
				mark _mp_GPK_CH_H_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				
				mark _mp_GPK_CH_I_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				
				mark _mp_GPK_CH_J_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				
				mark _mp_GPK_CH_K_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				
				mark _mp_GPK_CH_M_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				
				mark _mp_GPK_CH_N_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				
				mark _mp_GPK_CH_P_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				
				mark _mp_GPK_CH_L_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				
				mark _mp_GPK_CH_O_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				
				mark _mp_GPK_CH_Q_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				mark _mp_GPK_CH_R_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				mark _mp_GPK_CH_S_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				mark _mp_GPK_CH_T_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				mark _mp_GPK_CH_U_VG_FLOW_right
				}
			
			else if _s_chain = "GPK_CH_X" then
				{
				mark _mp_GPK_CH_X_VG_FLOW_right
				}
			else if _s_chain = "GPK_CH_W" then
				{			
				mark _mp_GPK_CH_W_VG_FLOW_right
				}
			else if _s_chain = "GPK_CH_V" then
				{
				mark _mp_GPK_CH_V_VG_FLOW_right 
				}	
			
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub label_vg_flow_line^ "mp text"
				}
			}
		}	
	end sub		/* ends sub label_vg_flow_line */
	
	
	
	
	
	
	
	
	
	





sub draw_skip_to_and_mark_double_face_barrier_closest_chain
	{
	
	if _s_closest_chain_side_slope = "left" then 
		{
		
		/* this part marks the points for each side of the barrier */
		/* the left side of the barrier will be using even point numbers 100, 200, 300, 400, 500*/
		/* the right side of the barrier will be using odd point numbers 101, 201, 301, 401, 501*/
		
		if _s_closest_chain = "GPK_CH_A" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_A_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_A_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_A_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_A_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_A_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_A_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_A_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_A_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_A_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_A_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_A_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_A_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_A_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_A_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_A_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_A_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_A_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_A_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_A_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_A_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_A_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_A_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_A_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_A_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_A_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_A_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_A_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_A_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_B" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_B_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_B_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_B_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_B_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_B_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_B_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_B_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_B_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_B_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_B_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_B_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_B_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_B_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_B_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_B_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_B_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_B_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_B_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_B_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_B_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_B_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_B_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_B_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_B_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_B_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_B_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_B_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_B_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_D" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_D_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_D_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_D_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_D_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_D_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_D_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_D_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_D_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_D_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_D_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_D_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_D_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_D_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_D_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_D_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_D_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_D_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_D_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_D_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_D_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_D_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_D_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_D_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_D_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_D_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_D_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_D_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_D_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_C" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_C_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_C_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_C_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_C_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_C_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_C_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_C_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_C_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_C_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_C_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_C_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_C_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_C_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_C_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_C_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_C_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_C_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_C_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_C_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_C_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_C_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_C_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_C_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_C_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_C_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_C_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_C_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_C_curb_found_left	/* type of curb found */
					}
				
			}	
		else if _s_closest_chain = "GPK_CH_E" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_E_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_E_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_E_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_E_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_E_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_E_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_E_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_E_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_E_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_E_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_E_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_E_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_E_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_E_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_E_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_E_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_E_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_E_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_E_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_E_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_E_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_E_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_E_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_E_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_E_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_E_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_E_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_E_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_F" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_F_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_F_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_F_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_F_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_F_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_F_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_F_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_F_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_F_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_F_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_F_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_F_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_F_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_F_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_F_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_F_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_F_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_F_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_F_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_F_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_F_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_F_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_F_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_F_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_F_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_F_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_F_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_F_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_G" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_G_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_G_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_G_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_G_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_G_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_G_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_G_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_G_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_G_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_G_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_G_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_G_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_G_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_G_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_G_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_G_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_G_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_G_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_G_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_G_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_G_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_G_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_G_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_G_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_G_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_G_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_G_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_G_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_H" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_H_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_H_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_H_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_H_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_H_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_H_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_H_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_H_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_H_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_H_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_H_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_H_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_H_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_H_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_H_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_H_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_H_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_H_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_H_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_H_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_H_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_H_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_H_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_H_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_H_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_H_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_H_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_H_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_I" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_I_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_I_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_I_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_I_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_I_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_I_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_I_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_I_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_I_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_I_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_I_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_I_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_I_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_I_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_I_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_I_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_I_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_I_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_I_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_I_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_I_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_I_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_I_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_I_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_I_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_I_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_I_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_I_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_J" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_J_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_J_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_J_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_J_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_J_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_J_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_J_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_J_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_J_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_J_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_J_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_J_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_J_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_J_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_J_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_J_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_J_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_J_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_J_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_J_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_J_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_J_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_J_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_J_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_J_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_J_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_J_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_J_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_K" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_K_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_K_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_K_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_K_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_K_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_K_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_K_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_K_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_K_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_K_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_K_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_K_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_K_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_K_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_K_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_K_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_K_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_K_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_K_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_K_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_K_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_K_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_K_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_K_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_K_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_K_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_K_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_K_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_L" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_L_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_L_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_L_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_L_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_L_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_L_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_L_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_L_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_L_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_L_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_L_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_L_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_L_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_L_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_L_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_L_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_L_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_L_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_L_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_L_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_L_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_L_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_L_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_L_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_L_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_L_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_L_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_L_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_M" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_M_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_M_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_M_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_M_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_M_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_M_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_M_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_M_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_M_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_M_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_M_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_M_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_M_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_M_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_M_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_M_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_M_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_M_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_M_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_M_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_M_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_M_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_M_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_M_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_M_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_M_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_M_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_M_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_N" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_N_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_N_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_N_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_N_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_N_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_N_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_N_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_N_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_N_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_N_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_N_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_N_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_N_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_N_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_N_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_N_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_N_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_N_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_N_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_N_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_N_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_N_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_N_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_N_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_N_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_N_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_N_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_N_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_P" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_P_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_P_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_P_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_P_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_P_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_P_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_P_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_P_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_P_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_P_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_P_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_P_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_P_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_P_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_P_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_P_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_P_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_P_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_P_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_P_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_P_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_P_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_P_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_P_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_P_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_P_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_P_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_P_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_O" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_O_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_O_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_O_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_O_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_O_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_O_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_O_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_O_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_O_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_O_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_O_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_O_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_O_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_O_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_O_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_O_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_O_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_O_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_O_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_O_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_O_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_O_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_O_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_O_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_O_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_O_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_O_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_O_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_Q" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_Q_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_Q_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_Q_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_Q_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_Q_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_Q_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_Q_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_Q_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_Q_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_Q_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_Q_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_Q_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_Q_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_Q_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_Q_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_Q_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_Q_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_Q_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_Q_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_Q_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_Q_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_Q_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_Q_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_Q_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_Q_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_Q_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_Q_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_Q_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_R" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_R_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_R_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_R_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_R_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_R_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_R_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_R_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_R_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_R_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_R_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_R_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_R_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_R_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_R_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_R_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_R_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_R_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_R_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_R_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_R_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_R_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_R_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_R_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_R_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_R_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_R_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_R_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_R_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_S" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_S_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_S_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_S_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_S_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_S_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_S_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_S_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_S_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_S_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_S_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_S_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_S_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_S_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_S_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_S_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_S_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_S_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_S_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_S_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_S_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_S_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_S_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_S_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_S_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_S_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_S_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_S_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_S_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_T" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_T_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_T_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_T_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_T_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_T_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_T_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_T_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_T_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_T_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_T_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_T_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_T_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_T_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_T_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_T_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_T_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_T_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_T_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_T_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_T_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_T_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_T_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_T_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_T_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_T_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_T_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_T_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_T_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_U" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_U_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_U_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_U_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_U_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_U_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_U_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_U_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_U_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_U_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_U_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_U_found_curb_left		/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_U_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_U_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_U_curb_found_left		/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_U_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_U_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_U_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_U_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_U_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_U_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_U_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_U_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_U_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_U_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_U_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_U_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_U_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_U_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_X" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_X_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_X_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_X_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_X_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_X_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_X_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_X_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_X_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_X_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_X_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_X_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_X_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_X_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_X_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_X_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_X_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_X_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_X_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_X_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_X_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_X_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_X_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_X_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_X_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_X_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_X_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_X_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_X_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_W" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_W_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_W_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_W_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_W_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_W_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_W_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_W_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_W_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_W_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_W_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_W_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_W_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_W_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_W_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_W_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_W_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_W_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_W_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_W_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_W_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_W_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_W_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_W_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_W_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_W_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_W_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_W_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_W_curb_found_left	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_V" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_V_leop
						mark x500 y500
					draw skip to _mp_GPK_CH_V_tent_leos
						mark x400 y400
					draw skip to _mp_GPK_CH_V_tent_ltoc
						mark x300 y300
					draw skip to _mp_GPK_CH_V_tent_adv_leos
						mark x200 y200
					draw skip to _mp_GPK_CH_V_tent_start_of_bar_left
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_V_curb_dx_left
					_d_curb_dy_left_of_barrier = _d_GPK_CH_V_curb_dy_left 
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_V_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_V_reg_shoulder_slope_left
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_V_adv_shoulder_slope_left		
					_s_found_curb_left_of_bar = _s_GPK_CH_V_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_V_found_adv_shldr_left			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_V_found_regular_shldr_left
					_s_curb_found_left_of_bar = _s_GPK_CH_V_curb_found_left	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_V_leop
						mark x501 y501
					draw skip to _mp_GPK_CH_V_tent_leos
						mark x401 y401
					draw skip to _mp_GPK_CH_V_tent_ltoc
						mark x301 y301
					draw skip to _mp_GPK_CH_V_tent_adv_leos
						mark x201 y201
					draw skip to _mp_GPK_CH_V_tent_start_of_bar_left
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_V_curb_dx_left
					_d_curb_dy_right_of_barrier = _d_GPK_CH_V_curb_dy_left 
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_V_adjacent_shoulder_slope_left
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_V_reg_shoulder_slope_left
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_V_adv_shoulder_slope_left		
					_s_found_curb_right_of_bar = _s_GPK_CH_V_found_curb_left	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_V_found_adv_shldr_left			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_V_found_regular_shldr_left
					_s_curb_found_right_of_bar = _s_GPK_CH_V_curb_found_left	/* type of curb found */
					}
				
			}
		else
			{
			draw dx=10 dy=10
			draw text char = ^missing closest chain name in sub draw_gore^ "mp text"
			}
		}
	
	else if _s_closest_chain_side_slope = "right" then 
		{	
		if _s_closest_chain = "GPK_CH_A" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_A_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_A_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_A_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_A_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_A_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_A_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_A_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_A_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_A_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_A_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_A_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_A_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_A_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_A_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_A_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_A_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_A_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_A_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_A_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_A_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_A_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_A_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_A_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_A_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_A_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_A_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_A_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_A_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_B" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_B_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_B_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_B_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_B_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_B_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_B_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_B_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_B_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_B_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_B_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_B_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_B_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_B_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_B_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_B_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_B_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_B_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_B_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_B_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_B_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_B_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_B_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_B_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_B_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_B_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_B_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_B_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_B_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_D" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_D_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_D_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_D_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_D_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_D_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_D_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_D_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_D_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_D_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_D_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_D_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_D_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_D_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_D_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_D_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_D_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_D_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_D_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_D_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_D_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_D_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_D_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_D_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_D_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_D_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_D_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_D_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_D_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_C" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_C_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_C_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_C_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_C_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_C_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_C_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_C_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_C_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_C_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_C_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_C_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_C_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_C_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_C_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_C_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_C_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_C_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_C_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_C_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_C_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_C_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_C_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_C_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_C_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_C_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_C_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_C_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_C_curb_found_right	/* type of curb found */
					}
				
			}	
		else if _s_closest_chain = "GPK_CH_E" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_E_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_E_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_E_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_E_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_E_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_E_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_E_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_E_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_E_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_E_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_E_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_E_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_E_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_E_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_E_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_E_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_E_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_E_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_E_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_E_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_E_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_E_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_E_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_E_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_E_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_E_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_E_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_E_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_F" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_F_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_F_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_F_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_F_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_F_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_F_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_F_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_F_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_F_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_F_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_F_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_F_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_F_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_F_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_F_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_F_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_F_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_F_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_F_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_F_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_F_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_F_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_F_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_F_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_F_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_F_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_F_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_F_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_G" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_G_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_G_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_G_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_G_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_G_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_G_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_G_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_G_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_G_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_G_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_G_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_G_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_G_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_G_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_G_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_G_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_G_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_G_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_G_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_G_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_G_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_G_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_G_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_G_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_G_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_G_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_G_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_G_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_H" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_H_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_H_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_H_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_H_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_H_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_H_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_H_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_H_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_H_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_H_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_H_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_H_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_H_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_H_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_H_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_H_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_H_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_H_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_H_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_H_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_H_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_H_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_H_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_H_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_H_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_H_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_H_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_H_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_I" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_I_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_I_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_I_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_I_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_I_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_I_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_I_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_I_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_I_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_I_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_I_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_I_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_I_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_I_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_I_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_I_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_I_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_I_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_I_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_I_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_I_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_I_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_I_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_I_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_I_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_I_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_I_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_I_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_J" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_J_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_J_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_J_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_J_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_J_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_J_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_J_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_J_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_J_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_J_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_J_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_J_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_J_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_J_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_J_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_J_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_J_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_J_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_J_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_J_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_J_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_J_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_J_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_J_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_J_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_J_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_J_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_J_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_K" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_K_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_K_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_K_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_K_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_K_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_K_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_K_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_K_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_K_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_K_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_K_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_K_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_K_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_K_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_K_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_K_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_K_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_K_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_K_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_K_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_K_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_K_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_K_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_K_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_K_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_K_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_K_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_K_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_L" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_L_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_L_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_L_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_L_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_L_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_L_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_L_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_L_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_L_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_L_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_L_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_L_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_L_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_L_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_L_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_L_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_L_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_L_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_L_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_L_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_L_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_L_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_L_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_L_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_L_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_L_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_L_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_L_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_M" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_M_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_M_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_M_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_M_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_M_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_M_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_M_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_M_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_M_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_M_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_M_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_M_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_M_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_M_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_M_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_M_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_M_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_M_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_M_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_M_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_M_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_M_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_M_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_M_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_M_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_M_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_M_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_M_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_N" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_N_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_N_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_N_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_N_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_N_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_N_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_N_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_N_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_N_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_N_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_N_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_N_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_N_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_N_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_N_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_N_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_N_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_N_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_N_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_N_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_N_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_N_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_N_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_N_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_N_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_N_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_N_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_N_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_P" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_P_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_P_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_P_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_P_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_P_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_P_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_P_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_P_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_P_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_P_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_P_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_P_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_P_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_P_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_P_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_P_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_P_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_P_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_P_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_P_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_P_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_P_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_P_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_P_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_P_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_P_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_P_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_P_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_O" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_O_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_O_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_O_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_O_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_O_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_O_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_O_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_O_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_O_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_O_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_O_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_O_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_O_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_O_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_O_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_O_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_O_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_O_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_O_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_O_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_O_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_O_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_O_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_O_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_O_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_O_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_O_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_O_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_Q" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_Q_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_Q_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_Q_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_Q_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_Q_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_Q_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_Q_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_Q_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_Q_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_Q_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_Q_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_Q_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_Q_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_Q_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_Q_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_Q_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_Q_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_Q_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_Q_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_Q_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_Q_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_Q_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_Q_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_Q_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_Q_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_Q_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_Q_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_Q_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_R" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_R_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_R_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_R_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_R_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_R_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_R_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_R_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_R_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_R_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_R_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_R_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_R_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_R_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_R_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_R_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_R_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_R_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_R_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_R_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_R_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_R_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_R_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_R_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_R_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_R_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_R_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_R_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_R_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_S" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_S_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_S_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_S_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_S_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_S_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_S_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_S_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_S_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_S_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_S_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_S_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_S_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_S_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_S_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_S_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_S_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_S_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_S_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_S_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_S_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_S_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_S_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_S_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_S_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_S_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_S_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_S_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_S_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_T" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_T_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_T_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_T_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_T_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_T_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_T_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_T_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_T_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_T_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_T_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_T_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_T_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_T_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_T_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_T_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_T_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_T_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_T_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_T_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_T_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_T_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_T_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_T_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_T_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_T_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_T_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_T_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_T_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_U" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_U_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_U_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_U_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_U_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_U_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_U_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_U_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_U_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_U_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_U_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_U_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_U_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_U_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_U_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_U_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_U_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_U_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_U_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_U_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_U_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_U_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_U_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_U_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_U_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_U_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_U_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_U_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_U_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_X" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_X_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_X_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_X_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_X_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_X_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_X_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_X_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_X_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_X_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_X_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_X_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_X_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_X_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_X_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_X_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_X_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_X_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_X_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_X_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_X_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_X_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_X_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_X_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_X_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_X_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_X_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_X_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_X_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_W" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_W_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_W_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_W_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_W_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_W_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_W_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_W_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_W_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_W_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_W_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_W_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_W_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_W_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_W_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_W_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_W_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_W_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_W_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_W_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_W_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_W_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_W_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_W_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_W_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_W_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_W_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_W_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_W_curb_found_right	/* type of curb found */
					}
				
			}
		else if _s_closest_chain = "GPK_CH_V" then
			{	
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				if _s_side_slope = ^left^ then
					{
					draw skip to _mp_GPK_CH_V_reop
						mark x500 y500
					draw skip to _mp_GPK_CH_V_tent_reos
						mark x400 y400
					draw skip to _mp_GPK_CH_V_tent_rtoc
						mark x300 y300
					draw skip to _mp_GPK_CH_V_tent_adv_reos
						mark x200 y200
					draw skip to _mp_GPK_CH_V_tent_start_of_bar_right
						mark x100 y100
					_d_curb_dx_left_of_barrier = _d_GPK_CH_V_curb_dx_right
					_d_curb_dy_left_of_barrier = _d_GPK_CH_V_curb_dy_right
					
					_d_adjacent_shoulder_slope_left_of_bar = _d_GPK_CH_V_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_left_of_bar = _d_GPK_CH_V_reg_shoulder_slope_right
					_d_adv_shoulder_slope_left_of_bar = _d_GPK_CH_V_adv_shoulder_slope_right		
					_s_found_curb_left_of_bar = _s_GPK_CH_V_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_left_of_bar = _s_GPK_CH_V_found_adv_shldr_right			
					_s_found_regular_shoulder_left_of_bar = _s_GPK_CH_V_found_regular_shldr_right
					_s_curb_found_left_of_bar = _s_GPK_CH_V_curb_found_right	/* type of curb found */
					
					
					}
					
				/* use _s_side_slope here to determine if closest chain on left or right of barrier */
				else if _s_side_slope = ^right^ then
					{
					draw skip to _mp_GPK_CH_V_reop
						mark x501 y501
					draw skip to _mp_GPK_CH_V_tent_reos
						mark x401 y401
					draw skip to _mp_GPK_CH_V_tent_rtoc
						mark x301 y301
					draw skip to _mp_GPK_CH_V_tent_adv_reos
						mark x201 y201
					draw skip to _mp_GPK_CH_V_tent_start_of_bar_right
						mark x101 y101
					_d_curb_dx_right_of_barrier = _d_GPK_CH_V_curb_dx_right
					_d_curb_dy_right_of_barrier = _d_GPK_CH_V_curb_dy_right
					
					_d_adjacent_shoulder_slope_right_of_bar = _d_GPK_CH_V_adjacent_shoulder_slope_right
					_d_reg_shoulder_slope_right_of_bar = _d_GPK_CH_V_reg_shoulder_slope_right
					_d_adv_shoulder_slope_right_of_bar = _d_GPK_CH_V_adv_shoulder_slope_right		
					_s_found_curb_right_of_bar = _s_GPK_CH_V_found_curb_right	/* yes or no */
					_s_found_adv_shoulder_right_of_bar = _s_GPK_CH_V_found_adv_shldr_right			
					_s_found_regular_shoulder_right_of_bar = _s_GPK_CH_V_found_regular_shldr_right
					_s_curb_found_right_of_bar = _s_GPK_CH_V_curb_found_right	/* type of curb found */
					}
				
			}
		else
			{
			draw dx=10 dy=10
			draw text char = ^missing closest chain name in sub draw_gore^ "mp text"
			}
		}
	
	}
	end sub /* ends remember_double_face_barrier_info */	
	


sub draw_ewks_limits
	{
	/* I am at the point that I want to start drawing the ewks limits */
	
	
	if _s_ewks_chain = "GPK_CH_A" then
		{
		set plot parameters "GPK_CH_A_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_B" then
		{
		set plot parameters "GPK_CH_B_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_D" then
		{
		set plot parameters "GPK_CH_D_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_C" then
		{
		set plot parameters "GPK_CH_C_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_E" then
		{
		set plot parameters "GPK_CH_E_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_F" then
		{
		set plot parameters "GPK_CH_F_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_G" then
		{
		set plot parameters "GPK_CH_G_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_H" then
		{
		set plot parameters "GPK_CH_H_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_I" then
		{
		set plot parameters "GPK_CH_I_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_J" then
		{
		set plot parameters "GPK_CH_J_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_K" then
		{
		set plot parameters "GPK_CH_K_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_M" then
		{
		set plot parameters "GPK_CH_M_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_N" then
		{
		set plot parameters "GPK_CH_N_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_P" then
		{
		set plot parameters "GPK_CH_P_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_L" then
		{
		set plot parameters "GPK_CH_L_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_O" then
		{
		set plot parameters "GPK_CH_O_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_Q" then
		{
		set plot parameters "GPK_CH_Q_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_R" then
		{
		set plot parameters "GPK_CH_R_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_S" then
		{
		set plot parameters "GPK_CH_S_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_T" then
		{
		set plot parameters "GPK_CH_T_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_U" then
		{
		set plot parameters "GPK_CH_U_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_X" then
		{
		set plot parameters "GPK_CH_X_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_W" then
		{
		set plot parameters "GPK_CH_W_ew_xs_limits_symb"
		}
	else if _s_ewks_chain = "GPK_CH_V" then
		{
		set plot parameters "GPK_CH_V_ew_xs_limits_symb"
		}		
	else
		{
		set plot parameters lvname = default co=0 wt=5 lc=0
		draw dx=10 dy=10
		draw text char = ^missing chain name in sub label_eos on left^ "mp text"
		}
	mark _mp_start_ewks_limits_here
	draw skip dx=0 dy=25
	draw dx=0 dy=-50
	}
	END SUB		
			
	
	
	sub label_left_outside_top_of_SFB
	{	
	if _s_chain = "GPK_CH_A" then
		{
		mark _mp_GPK_CH_A_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_A_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_B" then
		{
		mark _mp_GPK_CH_B_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_B_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_D" then
		{
		mark _mp_GPK_CH_D_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_D_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_C" then
		{
		mark _mp_GPK_CH_C_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_C_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_E" then
		{
		mark _mp_GPK_CH_E_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_E_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_F" then
		{
		mark _mp_GPK_CH_F_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_F_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_G" then
		{
		mark _mp_GPK_CH_G_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_G_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_H" then
		{
		mark _mp_GPK_CH_H_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_H_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_I" then
		{
		mark _mp_GPK_CH_I_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_I_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_J" then
		{
		mark _mp_GPK_CH_J_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_J_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_K" then
		{
		mark _mp_GPK_CH_K_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_K_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_M" then
		{
		mark _mp_GPK_CH_M_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_M_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_N" then
		{
		mark _mp_GPK_CH_N_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_N_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_P" then
		{
		mark _mp_GPK_CH_P_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_P_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_L" then
		{
		mark _mp_GPK_CH_L_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_L_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_O" then
		{
		mark _mp_GPK_CH_O_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_O_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_Q" then
		{
		mark _mp_GPK_CH_Q_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_Q_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_R" then
		{
		mark _mp_GPK_CH_R_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_R_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_S" then
		{
		mark _mp_GPK_CH_S_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_S_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_T" then
		{
		mark _mp_GPK_CH_T_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_T_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_U" then
		{
		mark _mp_GPK_CH_U_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_U_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_X" then
		{
		mark _mp_GPK_CH_X_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_X_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_W" then
		{
		mark _mp_GPK_CH_W_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_W_left_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_V" then
		{
		mark _mp_GPK_CH_V_left_out_top_barrier
		draw text char = ^_mp_GPK_CH_V_left_out_top_barrier^ "mp text"
		}		
	else
		{
		set plot parameters lvname = default co=0 wt=5 lc=0
		draw dx=10 dy=10
		draw text char = ^missing chain name in sub label_left_outside_top_of_SFB^ "mp text"
		}
	}
	end sub /* ends sub label_left_outside_top_of_SFB */
	
	
	
	
	sub label_right_outside_top_of_SFB
	{	
	if _s_chain = "GPK_CH_A" then
		{
		mark _mp_GPK_CH_A_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_A_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_B" then
		{
		mark _mp_GPK_CH_B_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_B_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_D" then
		{
		mark _mp_GPK_CH_D_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_D_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_C" then
		{
		mark _mp_GPK_CH_C_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_C_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_E" then
		{
		mark _mp_GPK_CH_E_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_E_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_F" then
		{
		mark _mp_GPK_CH_F_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_F_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_G" then
		{
		mark _mp_GPK_CH_G_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_G_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_H" then
		{
		mark _mp_GPK_CH_H_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_H_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_I" then
		{
		mark _mp_GPK_CH_I_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_I_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_J" then
		{
		mark _mp_GPK_CH_J_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_J_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_K" then
		{
		mark _mp_GPK_CH_K_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_K_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_M" then
		{
		mark _mp_GPK_CH_M_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_M_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_N" then
		{
		mark _mp_GPK_CH_N_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_N_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_P" then
		{
		mark _mp_GPK_CH_P_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_P_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_L" then
		{
		mark _mp_GPK_CH_L_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_L_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_O" then
		{
		mark _mp_GPK_CH_O_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_O_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_Q" then
		{
		mark _mp_GPK_CH_Q_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_Q_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_R" then
		{
		mark _mp_GPK_CH_R_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_R_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_S" then
		{
		mark _mp_GPK_CH_S_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_S_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_T" then
		{
		mark _mp_GPK_CH_T_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_T_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_U" then
		{
		mark _mp_GPK_CH_U_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_U_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_X" then
		{
		mark _mp_GPK_CH_X_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_X_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_W" then
		{
		mark _mp_GPK_CH_W_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_W_right_out_top_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_V" then
		{
		mark _mp_GPK_CH_V_right_out_top_barrier
		draw text char = ^_mp_GPK_CH_V_right_out_top_barrier^ "mp text"
		}		
	else
		{
		set plot parameters lvname = default co=0 wt=5 lc=0
		draw dx=10 dy=10
		draw text char = ^missing chain name in sub label_right_outside_top_of_SFB^ "mp text"
		}
	}
	end sub /* ends sub label_right_outside_top_of_SFB */
	
	
	
	
	sub label_left_outside_bottom_of_SFB
	{	
	if _s_chain = "GPK_CH_A" then
		{
		mark _mp_GPK_CH_A_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_A_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_B" then
		{
		mark _mp_GPK_CH_B_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_B_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_D" then
		{
		mark _mp_GPK_CH_D_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_D_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_C" then
		{
		mark _mp_GPK_CH_C_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_C_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_E" then
		{
		mark _mp_GPK_CH_E_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_E_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_F" then
		{
		mark _mp_GPK_CH_F_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_F_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_G" then
		{
		mark _mp_GPK_CH_G_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_G_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_H" then
		{
		mark _mp_GPK_CH_H_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_H_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_I" then
		{
		mark _mp_GPK_CH_I_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_I_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_J" then
		{
		mark _mp_GPK_CH_J_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_J_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_K" then
		{
		mark _mp_GPK_CH_K_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_K_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_M" then
		{
		mark _mp_GPK_CH_M_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_M_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_N" then
		{
		mark _mp_GPK_CH_N_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_N_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_P" then
		{
		mark _mp_GPK_CH_P_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_P_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_L" then
		{
		mark _mp_GPK_CH_L_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_L_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_O" then
		{
		mark _mp_GPK_CH_O_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_O_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_Q" then
		{
		mark _mp_GPK_CH_Q_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_Q_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_R" then
		{
		mark _mp_GPK_CH_R_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_R_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_S" then
		{
		mark _mp_GPK_CH_S_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_S_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_T" then
		{
		mark _mp_GPK_CH_T_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_T_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_U" then
		{
		mark _mp_GPK_CH_U_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_U_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_X" then
		{
		mark _mp_GPK_CH_X_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_X_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_W" then
		{
		mark _mp_GPK_CH_W_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_W_left_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_V" then
		{
		mark _mp_GPK_CH_V_left_out_bot_barrier
		draw text char = ^_mp_GPK_CH_V_left_out_bot_barrier^ "mp text"
		}		
	else
		{
		set plot parameters lvname = default co=0 wt=5 lc=0
		draw dx=10 dy=10
		draw text char = ^missing chain name in sub label_left_outside_bot_of_SFB^ "mp text"
		}
	}
	end sub /* ends sub label_left_outside_bottom_of_SFB */
	
	
	
	
	sub label_right_outside_bottom_of_SFB
	{	
	if _s_chain = "GPK_CH_A" then
		{
		mark _mp_GPK_CH_A_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_A_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_B" then
		{
		mark _mp_GPK_CH_B_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_B_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_D" then
		{
		mark _mp_GPK_CH_D_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_D_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_C" then
		{
		mark _mp_GPK_CH_C_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_C_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_E" then
		{
		mark _mp_GPK_CH_E_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_E_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_F" then
		{
		mark _mp_GPK_CH_F_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_F_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_G" then
		{
		mark _mp_GPK_CH_G_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_G_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_H" then
		{
		mark _mp_GPK_CH_H_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_H_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_I" then
		{
		mark _mp_GPK_CH_I_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_I_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_J" then
		{
		mark _mp_GPK_CH_J_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_J_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_K" then
		{
		mark _mp_GPK_CH_K_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_K_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_M" then
		{
		mark _mp_GPK_CH_M_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_M_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_N" then
		{
		mark _mp_GPK_CH_N_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_N_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_P" then
		{
		mark _mp_GPK_CH_P_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_P_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_L" then
		{
		mark _mp_GPK_CH_L_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_L_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_O" then
		{
		mark _mp_GPK_CH_O_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_O_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_Q" then
		{
		mark _mp_GPK_CH_Q_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_Q_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_R" then
		{
		mark _mp_GPK_CH_R_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_R_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_S" then
		{
		mark _mp_GPK_CH_S_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_S_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_T" then
		{
		mark _mp_GPK_CH_T_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_T_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_U" then
		{
		mark _mp_GPK_CH_U_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_U_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_X" then
		{
		mark _mp_GPK_CH_X_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_X_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_W" then
		{
		mark _mp_GPK_CH_W_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_W_right_out_bot_barrier^ "mp text"
		}
	else if _s_chain = "GPK_CH_V" then
		{
		mark _mp_GPK_CH_V_right_out_bot_barrier
		draw text char = ^_mp_GPK_CH_V_right_out_bot_barrier^ "mp text"
		}		
	else
		{
		set plot parameters lvname = default co=0 wt=5 lc=0
		draw dx=10 dy=10
		draw text char = ^missing chain name in sub label_right_outside_bot_of_SFB^ "mp text"
		}
	}
	end sub /* ends sub label_right_outside_bottom_of_SFB */
	
	
	
	
	sub draw_to_left_outside_top_of_SFB
	{	
	if _s_closest_chain = "GPK_CH_A" then
		{
		draw to _mp_GPK_CH_A_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_B" then
		{
		draw to _mp_GPK_CH_B_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_D" then
		{
		draw to _mp_GPK_CH_D_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_C" then
		{
		draw to _mp_GPK_CH_C_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_E" then
		{
		draw to _mp_GPK_CH_E_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_F" then
		{
		draw to _mp_GPK_CH_F_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_G" then
		{
		draw to _mp_GPK_CH_G_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_H" then
		{
		draw to _mp_GPK_CH_H_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_I" then
		{
		draw to _mp_GPK_CH_I_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_J" then
		{
		draw to _mp_GPK_CH_J_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_K" then
		{
		draw to _mp_GPK_CH_K_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_M" then
		{
		draw to _mp_GPK_CH_M_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_N" then
		{
		draw to _mp_GPK_CH_N_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_P" then
		{
		draw to _mp_GPK_CH_P_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_L" then
		{
		draw to _mp_GPK_CH_L_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_O" then
		{
		draw to _mp_GPK_CH_O_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_Q" then
		{
		draw to _mp_GPK_CH_Q_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_R" then
		{
		draw to _mp_GPK_CH_R_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_S" then
		{
		draw to _mp_GPK_CH_S_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_T" then
		{
		draw to _mp_GPK_CH_T_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_U" then
		{
		draw to _mp_GPK_CH_U_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_X" then
		{
		draw to _mp_GPK_CH_X_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_W" then
		{
		draw to _mp_GPK_CH_W_left_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_V" then
		{
		draw to _mp_GPK_CH_V_left_out_top_barrier
		
		}		
	else
		{
		set plot parameters lvname = default co=0 wt=5 lc=0
		draw dx=10 dy=10
		draw text char = ^missing chain name in sub label_left_outside_top_of_SFB^ "mp text"
		}
	}
	end sub /* ends sub draw_to_left_outside_top_of_SFB */
	
	
	
	
	sub draw_to_right_outside_top_of_SFB
	{	
	if _s_closest_chain = "GPK_CH_A" then
		{
		draw to _mp_GPK_CH_A_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_B" then
		{
		draw to _mp_GPK_CH_B_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_D" then
		{
		draw to _mp_GPK_CH_D_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_C" then
		{
		draw to _mp_GPK_CH_C_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_E" then
		{
		draw to _mp_GPK_CH_E_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_F" then
		{
		draw to _mp_GPK_CH_F_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_G" then
		{
		draw to _mp_GPK_CH_G_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_H" then
		{
		draw to _mp_GPK_CH_H_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_I" then
		{
		draw to _mp_GPK_CH_I_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_J" then
		{
		draw to _mp_GPK_CH_J_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_K" then
		{
		draw to _mp_GPK_CH_K_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_M" then
		{
		draw to _mp_GPK_CH_M_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_N" then
		{
		draw to _mp_GPK_CH_N_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_P" then
		{
		draw to _mp_GPK_CH_P_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_L" then
		{
		draw to _mp_GPK_CH_L_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_O" then
		{
		draw to _mp_GPK_CH_O_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_Q" then
		{
		draw to _mp_GPK_CH_Q_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_R" then
		{
		draw to _mp_GPK_CH_R_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_S" then
		{
		draw to _mp_GPK_CH_S_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_T" then
		{
		draw to _mp_GPK_CH_T_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_U" then
		{
		draw to _mp_GPK_CH_U_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_X" then
		{
		draw to _mp_GPK_CH_X_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_W" then
		{
		draw to _mp_GPK_CH_W_right_out_top_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_V" then
		{
		draw to _mp_GPK_CH_V_right_out_top_barrier
		
		}		
	else
		{
		set plot parameters lvname = default co=0 wt=5 lc=0
		draw dx=10 dy=10
		draw text char = ^missing chain name in sub label_right_outside_top_of_SFB^ "mp text"
		}
	}
	end sub /* ends sub draw_to_right_outside_top_of_SFB */
	
	
	
	
	
	
	
	
	sub draw_to_left_outside_bottom_of_SFB
	{	
	if _s_closest_chain = "GPK_CH_A" then
		{
		draw to _mp_GPK_CH_A_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_B" then
		{
		draw to _mp_GPK_CH_B_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_D" then
		{
		draw to _mp_GPK_CH_D_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_C" then
		{
		draw to _mp_GPK_CH_C_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_E" then
		{
		draw to _mp_GPK_CH_E_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_F" then
		{
		draw to _mp_GPK_CH_F_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_G" then
		{
		draw to _mp_GPK_CH_G_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_H" then
		{
		draw to _mp_GPK_CH_H_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_I" then
		{
		draw to _mp_GPK_CH_I_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_J" then
		{
		draw to _mp_GPK_CH_J_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_K" then
		{
		draw to _mp_GPK_CH_K_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_M" then
		{
		draw to _mp_GPK_CH_M_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_N" then
		{
		draw to _mp_GPK_CH_N_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_P" then
		{
		draw to _mp_GPK_CH_P_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_L" then
		{
		draw to _mp_GPK_CH_L_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_O" then
		{
		draw to _mp_GPK_CH_O_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_Q" then
		{
		draw to _mp_GPK_CH_Q_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_R" then
		{
		draw to _mp_GPK_CH_R_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_S" then
		{
		draw to _mp_GPK_CH_S_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_T" then
		{
		draw to _mp_GPK_CH_T_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_U" then
		{
		draw to _mp_GPK_CH_U_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_X" then
		{
		draw to _mp_GPK_CH_X_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_W" then
		{
		draw to _mp_GPK_CH_W_left_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_V" then
		{
		draw to _mp_GPK_CH_V_left_out_bot_barrier
		
		}		
	else
		{
		set plot parameters lvname = default co=0 wt=5 lc=0
		draw dx=10 dy=10
		draw text char = ^missing chain name in sub label_left_outside_bot_of_SFB^ "mp text"
		}
	}
	end sub /* ends sub draw_to_left_outside_bottom_of_SFB */
	
	
	
	
	sub draw_to_right_outside_botom_of_SFB
	{	
	if _s_closest_chain = "GPK_CH_A" then
		{
		draw to _mp_GPK_CH_A_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_B" then
		{
		draw to _mp_GPK_CH_B_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_D" then
		{
		draw to _mp_GPK_CH_D_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_C" then
		{
		draw to _mp_GPK_CH_C_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_E" then
		{
		draw to _mp_GPK_CH_E_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_F" then
		{
		draw to _mp_GPK_CH_F_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_G" then
		{
		draw to _mp_GPK_CH_G_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_H" then
		{
		draw to _mp_GPK_CH_H_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_I" then
		{
		draw to _mp_GPK_CH_I_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_J" then
		{
		draw to _mp_GPK_CH_J_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_K" then
		{
		draw to _mp_GPK_CH_K_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_M" then
		{
		draw to _mp_GPK_CH_M_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_N" then
		{
		draw to _mp_GPK_CH_N_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_P" then
		{
		draw to _mp_GPK_CH_P_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_L" then
		{
		draw to _mp_GPK_CH_L_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_O" then
		{
		draw to _mp_GPK_CH_O_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_Q" then
		{
		draw to _mp_GPK_CH_Q_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_R" then
		{
		draw to _mp_GPK_CH_R_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_S" then
		{
		draw to _mp_GPK_CH_S_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_T" then
		{
		draw to _mp_GPK_CH_T_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_U" then
		{
		draw to _mp_GPK_CH_U_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_X" then
		{
		draw to _mp_GPK_CH_X_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_W" then
		{
		draw to _mp_GPK_CH_W_right_out_bot_barrier
		
		}
	else if _s_closest_chain = "GPK_CH_V" then
		{
		draw to _mp_GPK_CH_V_right_out_bot_barrier
		
		}		
	else
		{
		set plot parameters lvname = default co=0 wt=5 lc=0
		draw dx=10 dy=10
		draw text char = ^missing chain name in sub label_right_outside_bot_of_SFB^ "mp text"
		}
	}
	end sub /* ends sub draw_to_right_outside_botom_of_SFB */
	
	
	
	
	
	
	sub draw_skip_to_aggbase_under_split_barrier
		{	
		
		
		if _s_side_slope = "left" then 
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_left_tie_agg_together
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_left_tie_agg_together

				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_left_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_left_tie_agg_together

				}
			else if _s_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_left_tie_agg_together

				}
			else if _s_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_left_tie_agg_together

				}
			else if _s_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_left_tie_agg_together

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_aggbase_under_split_barrier^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_right_tie_agg_together
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_right_tie_agg_together

				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_right_tie_agg_together

				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_right_tie_agg_together

				}
			else if _s_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_right_tie_agg_together

				}
			else if _s_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_right_tie_agg_together

				}
			else if _s_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_right_tie_agg_together

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_aggbase_under_split_barrier^ "mp text"
				}
			} /* ends ssr*/
		}
	
	end sub /* ends sub draw_skip_to_aggbase_under_split_barrier*/		
	
	
	
	
	
	sub draw_skip_to_aggbase_under_closest_split_barrier
		{	
		
		
		if _s_closest_chain_side_slope = "left" then 
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_left_tie_agg_together
				
				}
				
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_left_tie_agg_together

				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_left_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_left_tie_agg_together

				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_left_tie_agg_together

				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_left_tie_agg_together

				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_left_tie_agg_together

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_aggbase_under_closest_split_barrier^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_right_tie_agg_together
				
				}
				
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_right_tie_agg_together

				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_right_tie_agg_together

				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_right_tie_agg_together

				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_right_tie_agg_together

				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_right_tie_agg_together

				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_right_tie_agg_together

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_aggbase_under_closest_split_barrier^ "mp text"
				}
			} /* ends ssr*/
		}
	
	end sub /* ends sub draw_skip_to_aggbase_under_closest_split_barrier*/	
	
	




sub draw_skip_to_subbase_under_split_barrier
		{	
		
		
		if _s_side_slope = "left" then 
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_left_tie_subbase_together
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_left_tie_subbase_together

				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_left_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_left_tie_subbase_together

				}
			else if _s_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_left_tie_subbase_together

				}
			else if _s_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_left_tie_subbase_together

				}
			else if _s_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_left_tie_subbase_together

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_subbase_under_split_barrier^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_right_tie_subbase_together
				
				}
				
			else if _s_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_right_tie_subbase_together

				}
				
			else if _s_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_right_tie_subbase_together

				}
			
			else if _s_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_right_tie_subbase_together

				}
			else if _s_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_right_tie_subbase_together

				}
			else if _s_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_right_tie_subbase_together

				}
			else if _s_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_right_tie_subbase_together

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_subbase_under_split_barrier^ "mp text"
				}
			} /* ends ssr*/
		}
	
	end sub /* ends sub draw_skip_to_subbase_under_split_barrier*/		
	
	
	
	

	sub draw_skip_to_subbase_under_closest_split_barrier
		{	
		
		
		if _s_closest_chain_side_slope = "left" then 
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_left_tie_subbase_together
				
				}
				
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_left_tie_subbase_together

				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_left_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_left_tie_subbase_together

				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_left_tie_subbase_together

				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_left_tie_subbase_together

				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_left_tie_subbase_together

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_subbase_under_closest_split_barrier^ "mp text"
				}
			} /* ends ssl*/

	
	
		else /* ssr*/
			{
						
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_right_tie_subbase_together
				
				}
				
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_right_tie_subbase_together

				}
				
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_right_tie_subbase_together

				}
			
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_right_tie_subbase_together

				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_right_tie_subbase_together

				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_right_tie_subbase_together

				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_right_tie_subbase_together

				}	
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub draw_skip_to_subbase_under_closest_split_barrier^ "mp text"
				}
			} /* ends ssr*/
		}
	
	end sub /* ends sub draw_skip_to_subbase_under_closest_split_barrier*/	

	
	sub draw_skip_to_tie_road_together_point
	{ 
		
		 if _s_closest_chain_side_slope = ^left^ then 
		     {	
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_left_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_left_tie_road_together
				}			
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub mark_tie_road_together_point on left^ "mp text"
				}
			}
		else /*ssr*/
		  {	
			/* depending on which shape cluster is running, a different point is labeled at this point */
			if _s_closest_chain = "GPK_CH_A" then
				{
				draw skip to _mp_GPK_CH_A_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_B" then
				{
				draw skip to _mp_GPK_CH_B_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_C" then
				{
				draw skip to _mp_GPK_CH_C_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_D" then
				{
				draw skip to _mp_GPK_CH_D_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_E" then
				{
				draw skip to _mp_GPK_CH_E_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_F" then
				{
				draw skip to _mp_GPK_CH_F_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_G" then
				{
				draw skip to _mp_GPK_CH_G_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_H" then
				{
				draw skip to _mp_GPK_CH_H_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_I" then
				{
				draw skip to _mp_GPK_CH_I_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_J" then
				{
				draw skip to _mp_GPK_CH_J_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_K" then
				{
				draw skip to _mp_GPK_CH_K_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_M" then
				{
				draw skip to _mp_GPK_CH_M_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_N" then
				{
				draw skip to _mp_GPK_CH_N_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_P" then
				{
				draw skip to _mp_GPK_CH_P_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_L" then
				{
				draw skip to _mp_GPK_CH_L_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_O" then
				{
				draw skip to _mp_GPK_CH_O_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_Q" then
				{
				draw skip to _mp_GPK_CH_Q_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_R" then
				{
				draw skip to _mp_GPK_CH_R_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_S" then
				{
				draw skip to _mp_GPK_CH_S_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_T" then
				{
				draw skip to _mp_GPK_CH_T_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_U" then
				{
				draw skip to _mp_GPK_CH_U_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_X" then
				{
				draw skip to _mp_GPK_CH_X_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_W" then
				{
				draw skip to _mp_GPK_CH_W_right_tie_road_together
				}
			else if _s_closest_chain = "GPK_CH_V" then
				{
				draw skip to _mp_GPK_CH_V_right_tie_road_together
				}			
			else
				{
				draw dx=10 dy=10
				draw text char = ^missing chain name in sub mark_tie_road_together_point on right^ "mp text"
				}
			}
		}
		end sub	/* ends the draw_skip_to_tie_road_together_point subroutine */

	
	
	}	/* ends the if p1 then */
	
else
	{
	
	}
	
		